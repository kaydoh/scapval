<?xml version="1.0" encoding="UTF-8"?><data-stream-collection xmlns="http://scap.nist.gov/schema/scap/source/1.2" xmlns:cat="urn:oasis:names:tc:entity:xmlns:xml:catalog" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="scap_gov.nist_collection_USGCB-Windows-XP-firewall-2.0.3.1.zip" schematron-version="1.0" xsi:schemaLocation="http://scap.nist.gov/schema/scap/source/1.2 http://scap.nist.gov/schema/scap/1.2/scap-source-data-stream_1.2.xsd">
  <data-stream id="scap_gov.nist_datastream_USGCB-Windows-XP-firewall-2.0.3.1.zip" scap-version="1.2" timestamp="2012-02-24T10:00:00" use-case="CONFIGURATION">
    <dictionaries>
      <component-ref id="scap_gov.nist_cref_USGCB-Windows-XP-firewall-cpe-dictionary.xml" xlink:href="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-cpe-dictionary.xml">
        <cat:catalog>
          <cat:uri name="USGCB-Windows-XP-firewall-cpe-oval.xml" uri="#scap_gov.nist_cref_USGCB-Windows-XP-firewall-cpe-oval.xml"/>
        </cat:catalog>
      </component-ref>
    </dictionaries>
    <checklists>
      <component-ref id="scap_gov.nist_cref_USGCB-Windows-XP-firewall-xccdf.xml" xlink:href="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-xccdf.xml">
        <cat:catalog>
            <cat:uri name="USGCB-Windows-XP-firewall-oval.xml" uri="#scap_gov.nist_cref_USGCB-Windows-XP-firewall-oval.xml"/>
        </cat:catalog>
      </component-ref>
    </checklists>
    <checks>
      <component-ref id="scap_gov.nist_cref_USGCB-Windows-XP-firewall-oval.xml" xlink:href="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-oval.xml"/>
      <component-ref id="scap_gov.nist_cref_USGCB-Windows-XP-firewall-cpe-oval.xml" xlink:href="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-cpe-oval.xml"/>
    </checks>
  </data-stream>
    <data-stream id="scap_gov.nist_datastream_USGCB2-Windows-XP-firewall-2.0.3.1.zip" scap-version="1.2" timestamp="2012-02-24T10:00:00" use-case="CONFIGURATION">
        <dictionaries>
            <component-ref id="scap_gov.nist_cref_USGCB2-Windows-XP-firewall-cpe-dictionary.xml" xlink:href="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-cpe-dictionary.xml">
                <cat:catalog>
                    <cat:uri name="USGCB-Windows-XP-firewall-cpe-oval.xml" uri="#scap_gov.nist_cref_USGCB-Windows-XP-firewall-cpe-oval.xml"/>
                </cat:catalog>
            </component-ref>
        </dictionaries>
        <checklists>
            <component-ref id="scap_gov.nist_cref_USGCB2-Windows-XP-firewall-xccdf.xml" xlink:href="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-xccdf.xml">
                <cat:catalog>
                    <cat:uri name="USGCB-Windows-XP-firewall-oval.xml" uri="#scap_gov.nist_cref_USGCB-Windows-XP-firewall-oval.xml"/>
                </cat:catalog>
            </component-ref>
        </checklists>
        <checks>
            <component-ref id="scap_gov.nist_cref_USGCB2-Windows-XP-firewall-oval.xml" xlink:href="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-oval.xml"/>
            <component-ref id="scap_gov.nist_cref_USGCB2-Windows-XP-firewall-cpe-oval.xml" xlink:href="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-cpe-oval.xml"/>
        </checks>
    </data-stream>
  <component id="scap_gov.nist_comp_USGCB-Windows-XP-firewall-xccdf.xml" timestamp="2012-02-24T10:00:00">
      <xccdf:Benchmark xmlns:cdf="http://checklists.nist.gov/xccdf/1.1" xmlns:cpe2="http://cpe.mitre.org/language/2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dsig="http://www.w3.org/2000/09/xmldsig#" xmlns:xccdf="http://checklists.nist.gov/xccdf/1.2" xmlns:xhtml="http://www.w3.org/1999/xhtml" id="xccdf_gov.nist_benchmark_USGCB-Windows-XP-firewall" resolved="0" style="SCAP_1.2" xml:lang="en-US" xsi:schemaLocation="http://checklists.nist.gov/xccdf/1.2 http://scap.nist.gov/schema/xccdf/1.2/xccdf_1.2.xsd http://cpe.mitre.org/dictionary/2.0 http://scap.nist.gov/schema/cpe/2.3/cpe-dictionary_2.3.xsd">
      <xccdf:status date="2012-02-24">accepted</xccdf:status>
      <xccdf:title>USGCB: Guidance for Securing Microsoft Windows XP Firewall</xccdf:title>
      <xccdf:description>NIST Special Publication 800-68 has been created to assist IT professionals, in particular 
            Windows XP system administrators and information security personnel, in effectively securing Windows XP 
            Professional SP2 and SP3 systems with Windows Firewall.</xccdf:description>
      <xccdf:notice id="terms-of-use" xml:lang="en-US">Do not attempt to implement any of the settings in this guide
            without first testing them in a non-operational environment. NIST assumes no responsibility whatsoever for its
            use by other parties, and makes no guarantees, expressed or implied, about its quality, reliability, or any
            other characteristic. NIST would appreciate acknowledgement if the document and template are
            used.</xccdf:notice>
      <xccdf:front-matter xml:lang="en-US">The Federal CIO council created the Technology Information Subcommittee 
            (TIS) at the direction of OMB to govern, among other federal activities, the FDCC iniatitive. The TIS, based on 
            federal agency input, selects platforms and applcations for federal implementation. The TIS also is the Change 
            Control Board (CCB) for configuration settings. As stated in the Federal CIO Council Memo to federal agencies, 
            "The USGCB settings replace the Federal Desktop Core Configuration (FDCC) settings and provide the 
            recommended security baselines for Information Technology products widely deployed across the agencies."
      </xccdf:front-matter>
      <xccdf:rear-matter xml:lang="en-US">
            <xhtml:strong>Trademark Information</xhtml:strong>
            <xhtml:br/>
            <xhtml:br/>Microsoft, Windows, Windows 7, Windows XP, Windows 
            Vista, Internet Explorer, and Windows Firewall are either registered trademarks or trademarks of Microsoft 
            Corporation in the United States and other countries.<xhtml:br/>
            <xhtml:br/>All other names are registered trademarks or trademarks of
            their respective companies.</xccdf:rear-matter>
      <xccdf:reference href="http://web.nvd.nist.gov/view/ncp/repository/checklistDetail?id=297">
            <dc:publisher>National Institute of Standards and Technology</dc:publisher>
            <dc:identifier>SP 800-68</dc:identifier>
      </xccdf:reference>
          <xccdf:platform idref="cpe:/o:microsoft:windows_xp"/>
          <xccdf:version time="2012-02-24T10:00:00" update="http://usgcb.nist.gov">v1.2.3.1</xccdf:version>
      <xccdf:metadata>
            <publisher xmlns="http://purl.org/dc/elements/1.1/">National Institute of Standards and Technology</publisher>
            <dc:creator>National Institute of Standards and Technology</dc:creator>
            <dc:contributor>National Institute of Standards and Technology</dc:contributor>
            <dc:source>http://alpha.nist.gov</dc:source>
      </xccdf:metadata>
      <xccdf:model system="urn:xccdf:scoring:default"/>
      <xccdf:model system="urn:xccdf:scoring:flat"/>
      <!-- ==================================================================================================== -->
      <!-- =========================================  USGCB PROFILES  ========================================== -->
      <!-- ==================================================================================================== -->
      <!--                                                                                                      -->
      <!-- These profiles outline the specific guidance outlined by the United States Government Configuration Baseline.     -->
      <!-- Each defines the set of XCCDF rules that are applicable for that guidance as well as specific values -->
      <!-- to be used when determining compliance.                                                              -->
      <!--                                                                                                      -->
      <xccdf:Profile id="xccdf_gov.nist_profile_united_states_government_configuration_baseline_version_1.2.3.1">
            <xccdf:title>United States Government Configuration Baseline version 1.2.3.1</xccdf:title>
            <xccdf:description>This profile represents guidance outlined in United States Government Configuration Baseline settings for Windows XP Firewall on desktop systems.</xccdf:description>
            <!-- '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' -->
            <!-- '''  3 - USGCB Other Settings                                                               ''' -->
            <!-- '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' -->
            <xccdf:select idref="xccdf_gov.nist_rule_allow_file_print_sharing_exceptions_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_icm_exceptions_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_local_port_exceptions_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_local_program_exceptions_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_logging_log_dropped_packets_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_logging_log_successful_connections_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_logging_log_size_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_logging_log_path_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_remote_administration_exceptions_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_remote_desktop_exceptions_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_allow_upnp_framework_exceptions_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_prohibit_notifications_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_prohibit_unicast_response_to_multicast_or_broadcast_requests_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_protect_all_network_connections_domain_profile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_AllowFilePrintSharingExceptionsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_AllowICMPExceptionsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_AllowLocalPortExceptionsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_AllowLocalProgramExceptionsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_AllowRemoteAdministrationExceptionsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_AllowRemoteDesktopExceptionsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_AllowUPnPframeworkExceptionsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_DoNotAllowExceptionsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_ProhibitNotificationsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_ProhibitUnicastResponseToMulticastOrBroadcastRequestsStandardProfile" selected="true"/>
            <xccdf:select idref="xccdf_gov.nist_rule_ProtectAllNetworkConnectionsStandardProfile" selected="true"/>
            <!-- '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' -->
            <!-- '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' -->
            <!-- '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''' -->
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_file_print_sharing_exceptions_domain_profile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_local_port_exceptions_domain_profile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_local_program_exceptions_domain_profile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_remote_administration_exceptions_domain_profile_var" selector="enabledallowdisabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_remote_desktop_exceptions_domain_profile_var" selector="enabledallowdisabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_logging_log_dropped_packets_domain_profile_var" selector="enabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_logging_log_successful_connections_domain_profile_var" selector="enabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_logging_log_size_domain_profile_var" selector="16384_kb"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_logging_log_path_domain_profile_var" selector="systemroot_domainfwlog"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_allow_upnp_framework_exceptions_domain_profile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_prohibit_notifications_domain_profile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_prohibit_unicast_response_to_multicast_or_broadcast_requests_domain_profile_var" selector="enabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_protect_all_network_connections_domain_profile_var" selector="enabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_AllowFilePrintSharingExceptionsStandardProfile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_AllowLocalPortExceptionsStandardProfile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_AllowLocalProgramExceptionsStandardProfile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_AllowRemoteAdministrationExceptionsStandardProfile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_AllowRemoteDesktopExceptionsStandardProfile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_AllowUPnPframeworkExceptionsStandardProfile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_DoNotAllowExceptionsStandardProfile_var" selector="enabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_ProhibitNotificationsStandardProfile_var" selector="disabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_ProhibitUnicastResponseToMulticastOrBroadcastRequestsStandardProfile_var" selector="enabled"/>
            <xccdf:refine-value idref="xccdf_gov.nist_value_ProtectAllNetworkConnectionsStandardProfile_var" selector="enabled"/>
      </xccdf:Profile>
      <!-- ==================================================================================================== -->
      <!-- =================================  XP FIREWALL SECURITY GUIDANCE  ================================== -->
      <!-- ==================================================================================================== -->
      <!--                                                                                                      -->
      <!-- The following groups represent different types of guidance for Microsoft Windows XP Firewall.  For   -->
      <!-- specific recommendations from individual agencies (NIST, NSA, DISA) please refer to the XCCDF        -->
      <!-- profiles above that enable certain rules and provided tailored values.                               -->
      <!--                                                                                                      -->
      <!-- **************************************************************************************************** -->
      <!-- ***  1 - Introduction                                                                            *** -->
      <!-- **************************************************************************************************** -->
      <xccdf:Group id="xccdf_gov.nist_group_introduction">
            <xccdf:title>Introduction</xccdf:title>
            <xccdf:description>This guide has been created to assist federal agencies in effectively securing systems with Microsoft Windows XP Firewall based on OMB United States Government Configuration Baseline recommendations.Under the direction of OMB and in collaboration with DHS, DISA, NSA, USAF, and Microsoft, NIST has provided the following baseline to help agencies test, implement, and deploy the Microsoft Windows XP Firewall United States Government Configuration Baseline (USGCB) baseline. The United States Government Configuration Baseline (USGCB) is an OMB-mandated security configuration.Please refer to the USGCB home page for additional information. http://USGCB.nist.gov</xccdf:description>
      </xccdf:Group>
      <!-- **************************************************************************************************** -->
      <!-- ***  2 - USGCB Security Settings                                                                  *** -->
      <!-- **************************************************************************************************** -->
      <!--                                                                                                      -->
      <!-- none                                                                                                 -->
      <!--                                                                                                      -->
      <!-- **************************************************************************************************** -->
      <!-- ***  3 - USGCB Other Settings                                                                     *** -->
      <!-- **************************************************************************************************** -->
      <xccdf:Group id="xccdf_gov.nist_group_USGCB_other_settings">
            <xccdf:title>USGCB Other Settings</xccdf:title>
            <xccdf:description>USGCB has identified the following additional controls that must be checked in order to verify compliance.</xccdf:description>
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- ~~~  Windows Firewall Domain Profile                                                           -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <xccdf:Group id="xccdf_gov.nist_group_windows_firewall_domain_profile">
                  <xccdf:title>Windows Firewall - Domain Profile</xccdf:title>
                  <xccdf:description>The Domain Profile applies when a computer is connected to a network and authenticates to a domain controller in the domain to which the computer belongs.</xccdf:description>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_file_print_sharing_exceptions_domain_profile_var" operator="equals" type="number">
                        <xccdf:title>Allow file and print sharing exception</xccdf:title>
                        <xccdf:description>This setting allows file and printer sharing by configuring Windows Firewall to open UDP ports 137 and 138 and TCP ports 139 and 445. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive print jobs and requests for access to shared files. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from sharing files and printers. Because the computers in your environment running Windows XP will not normally be sharing files and printers, this appendix recommends you configure this setting as Disabled in all environments. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that
                              can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_local_port_exceptions_domain_profile_var" operator="equals" type="number">
                        <xccdf:title>Allow local port exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow local port exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local port exceptions list. Windows Firewall can use two port exceptions lists; the other is defined by the Windows Firewall: Define port exceptions policy setting. If you enable this policy setting, the Windows Firewall component in Control Panel allows administrators to define a local port exceptions list. If you disable this policy setting, the Windows Firewall component in Control Panel does not allow administrators to define such a list. Typically, local administrators are not authorized to override organizational policy and establish their own port exceptions list in enterprise or high security environments. For that reason, this appendix recommends configuring this option as Disabled.</xccdf:description>
                        <xccdf:value>0</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_local_program_exceptions_domain_profile_var" operator="equals" type="number">
                        <xccdf:title>Allow local program exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow local program exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local program exceptions list. Disabling this policy setting does not allow administrators to define a local program exceptions list, and ensures that program exceptions only come from Group Policy. Setting this policy to Enabled allows local administrators to use Control Panel to define program exceptions locally. For enterprise client computers, there may be conditions that justify having the client define local program exceptions. These conditions may include applications that were not analyzed when creating the organization's firewall policy or new applications that require nonstandard port configuration. In those cases, you may choose to enable this setting, recognizing that the attack surface of the affected computers is increased.</xccdf:description>
                        <xccdf:value>0</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_logging_log_dropped_packets_domain_profile_var" operator="equals" type="number">
                        <xccdf:title>Allow Logging: Log Dropped Packets</xccdf:title>
                        <xccdf:description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and
                              administrators cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_logging_log_successful_connections_domain_profile_var" operator="equals" type="number">
                        <xccdf:title>Allow Logging: Log Successful Connections</xccdf:title>
                        <xccdf:description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and
                              administrators cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_logging_log_size_domain_profile_var" operator="greater than or equal" type="number">
                        <xccdf:title>Allow Logging: Log Size</xccdf:title>
                        <xccdf:description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and
                              administrators cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="4096_kb">4096</xccdf:value>
                        <xccdf:value selector="16384_kb">16384</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_logging_log_path_domain_profile_var" operator="equals" type="string">
                        <xccdf:title>Allow Logging: Log Path</xccdf:title>
                        <xccdf:description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and
                              administrators cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</xccdf:description>
                        <xccdf:value>%systemroot%\domainfw.log</xccdf:value>
                        <xccdf:value selector="systemroot_domainfwlog">%systemroot%\domainfw.log</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_remote_administration_exceptions_domain_profile_var" operator="pattern match" type="string">
                        <xccdf:title>Allow remote administration exceptions</xccdf:title>
                        <xccdf:description>Many organizations take advantage of remote computer administration in their daily operations. However, some attacks have exploited the ports typically used by remote administration programs; Windows Firewall can block these ports. To provide flexibility for remote administration, the Windows Firewall: Allow remote administration exception setting is available. Configuring this setting to Enabled allows the computer to receive the unsolicited incoming messages associated with remote administration on TCP ports 135 and 445. This policy setting also allows SVCHOST.EXE and LSASS.EXE to receive unsolicited incoming messages and allows hosted services to open additional dynamically-assigned ports, typically in the range of 1044 to 1044 but potentially anywhere from 1044 to 65535. Enabling this setting also requires you to specify the IP addresses or subnets from which these incoming messages are allowed. If you configure this policy setting as Disabled,
                              Windows Firewall makes none of the described exceptions. This appendix recommends you enable this setting for enterprise computers if necessary, and to always disable the setting for high security computers. Computers in your environment should accept remote administration requests from as few computers as possible. To maximize the protection provided by the Windows Firewall, make sure to specify only the necessary IP addresses and subnets of computers used for remote administration. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:value>^0$</xccdf:value>
                        <xccdf:value selector="enabled">^1$</xccdf:value>
                        <xccdf:value selector="enabledallowdisabled">^(1|0)$</xccdf:value>
                        <xccdf:value selector="disabled">^0$</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_remote_desktop_exceptions_domain_profile_var" operator="pattern match" type="string">
                        <xccdf:title>Allow Remote Desktop exception</xccdf:title>
                        <xccdf:description>Many organizations use Remote Desktop connections in their normal troubleshooting procedures or operations. However, some attacks have occurred that exploited the ports typically used by Remote Desktop. To provide flexibility for remote administration, the Windows Firewall: Allow Remote Desktop exception setting is available. Enabling this setting configures Windows Firewall to open TCP port 3389 for inbound connections. You must also specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks this port and prevents the computer from receiving Remote Desktop requests. If an administrator attempts to open this port by adding it to a local port exceptions list, Windows Firewall does not open the port. Some attacks can exploit an open port 3389. To maintain the enhanced management capabilities provided by Remote Desktop, you should configure this setting to Enabled and
                              specify the IP addresses and subnets of the computers used for remote administration. Computers in your environment should accept Remote Desktop requests from as few computers as possible.</xccdf:description>
                        <xccdf:value>^0$</xccdf:value>
                        <xccdf:value selector="enabled">^1$</xccdf:value>
                        <xccdf:value selector="enabledallowdisabled">^(1|0)$</xccdf:value>
                        <xccdf:value selector="disabled">^0$</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_allow_upnp_framework_exceptions_domain_profile_var" operator="equals" type="number">
                        <xccdf:title>Allow UPnP framework exception</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow UPnP framework exception setting allows a computer to receive unsolicited Plug and Play messages sent by network devices, such as routers with built-in firewalls. To receive these messages, Windows Firewall opens TCP port 2869 and UDP port 1900. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive Plug and Play messages. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from receiving Plug and Play messages.</xccdf:description>
                        <xccdf:value>0</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <!-- Define Port Exceptions, not needed as just testing key existence -->
                  <xccdf:Value id="xccdf_gov.nist_value_prohibit_notifications_domain_profile_var" operator="equals" type="number">
                        <xccdf:title>Prohibit notification</xccdf:title>
                        <xccdf:description>Windows Firewall can display notifications to users when a program requests that Windows Firewall add the program to the program exceptions list. This situation occurs when programs attempt to open a port and are not allowed to do so based on current Windows Firewall rules. The Windows Firewall: Prohibit notifications setting configures whether these settings are shown to the users. If you set this policy to Enabled, Windows Firewall prevents the display of these notifications. If you set it to Disabled, Windows Firewall allows the display of these notifications.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_prohibit_unicast_response_to_multicast_or_broadcast_requests_domain_profile_var" operator="equals" type="number">
                        <xccdf:title>Prohibit unicast response to multicast or broadcast requests</xccdf:title>
                        <xccdf:description>The Windows Firewall: Prohibit unicast response to multicast or broadcast requests setting prevents a computer from receiving unicast responses to its outgoing multicast or broadcast messages. When this policy setting is enabled and the computer sends multicast or broadcast messages to other computers, Windows Firewall blocks the unicast responses sent by those other computers. When the setting is disabled and this computer sends a multicast or broadcast message to other computers, Windows Firewall waits up to three seconds for unicast responses from the other computers and then blocks all later responses. Typically, you would not want to receive unicast responses to multicast or broadcast messages. Such responses can indicate a denial of service (DoS) attack or an attacker attempting to probe a known live computer. This appendix recommends you configure this policy setting to Enabled to help prevent this type of attack. Note: This policy setting
                              has no effect if the unicast message is a response to a Dynamic Host Configuration Protocol (DHCP) broadcast message sent by the computer. Windows Firewall always permits those DHCP unicast responses. However, this policy setting can interfere with the NetBIOS messages that detect name conflicts.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_protect_all_network_connections_domain_profile_var" operator="equals" type="number">
                        <xccdf:title>Protect all Network Connections</xccdf:title>
                        <xccdf:description>The Windows Firewall: Protect all network connections setting turns on Windows Firewall, which replaces Internet Connection Firewall on all computers that are running Windows XP SP2. This appendix recommends configuring this setting to Enabled to protect all network connections for computers in all environments. If this setting is configured as Disabled, Windows Firewall is turned off and all other settings for Windows Firewall are ignored. Note: If you enable this policy setting, Windows Firewall runs and ignores the Computer Configuration\Administrative Templates\Network\Network Connections\Prohibit use of Internet Connection Firewall on your DNS domain network policy setting.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_file_print_sharing_exceptions_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow file and print sharing exception</xccdf:title>
                        <xccdf:description>This setting allows file and printer sharing by configuring Windows Firewall to open UDP ports 137 and 138 and TCP ports 139 and 445. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive print jobs and requests for access to shared files. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from sharing files and printers. Because the computers in your environment running Windows XP will not normally be sharing files and printers, this appendix recommends you configure this setting as Disabled in all environments. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that
                              can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3247-4</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50051" value-id="xccdf_gov.nist_value_allow_file_print_sharing_exceptions_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5005"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_icm_exceptions_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow ICMP exceptions (Allow inbound echo request and block everything else)</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow ICMP exceptions setting defines the set of Internet Control Message Protocol (ICMP) message types that Windows Firewall allows. Utilities can use ICMP messages to determine the status of other computers. For example, Ping uses the echo request message. If you set this policy setting to Enabled, you must specify which ICMP message types Windows Firewall allows the computer to send or receive. When you set this policy to Disabled, Windows Firewall blocks all unsolicited incoming ICMP message types and the listed outgoing ICMP message types. As a result, utilities that use the blocked ICMP messages will not be able to send those messages to or from the computer. Many attacker tools take advantage of computers that accept ICMP message types and use these messages to mount a variety of attacks. However, some applications require some ICMP messages in order to function properly. For that reason, this appendix recommends that
                              you configure this setting to Disabled whenever possible. If your environment requires some ICMP messages to get through Windows Firewall, configure the setting with the appropriate message types. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3141-9</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5006"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_local_port_exceptions_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow local port exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow local port exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local port exceptions list. Windows Firewall can use two port exceptions lists; the other is defined by the Windows Firewall: Define port exceptions policy setting. If you enable this policy setting, the Windows Firewall component in Control Panel allows administrators to define a local port exceptions list. If you disable this policy setting, the Windows Firewall component in Control Panel does not allow administrators to define such a list. Typically, local administrators are not authorized to override organizational policy and establish their own port exceptions list in enterprise or high security environments. For that reason, this appendix recommends configuring this option as Disabled.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3258-1</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50131" value-id="xccdf_gov.nist_value_allow_local_port_exceptions_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5013"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_local_program_exceptions_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow local program exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow local program exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local program exceptions list. Disabling this policy setting does not allow administrators to define a local program exceptions list, and ensures that program exceptions only come from Group Policy. Setting this policy to Enabled allows local administrators to use Control Panel to define program exceptions locally. For enterprise client computers, there may be conditions that justify having the client define local program exceptions. These conditions may include applications that were not analyzed when creating the organization's firewall policy or new applications that require nonstandard port configuration. In those cases, you may choose to enable this setting, recognizing that the attack surface of the affected computers is increased.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-2828-2</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50031" value-id="xccdf_gov.nist_value_allow_local_program_exceptions_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5003"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_logging_log_dropped_packets_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow Logging: Log Dropped Packets</xccdf:title>
                        <xccdf:description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and
                              administrators cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-2965-2</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50141" value-id="xccdf_gov.nist_value_allow_logging_log_dropped_packets_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5014"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_logging_log_successful_connections_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow Logging: Log Successful Connections</xccdf:title>
                        <xccdf:description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and
                              administrators cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3090-8</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50151" value-id="xccdf_gov.nist_value_allow_logging_log_successful_connections_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5015"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_logging_log_size_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow Logging: Log Size</xccdf:title>
                        <xccdf:description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and
                              administrators cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-2958-7</xccdf:ident>
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50161" value-id="xccdf_gov.nist_value_allow_logging_log_size_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5016"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_logging_log_path_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow Logging: Log Path</xccdf:title>
                        <xccdf:description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and
                              administrators cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-2923-1</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50171" value-id="xccdf_gov.nist_value_allow_logging_log_path_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5017"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_remote_administration_exceptions_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow remote administration exceptions</xccdf:title>
                        <xccdf:description>Many organizations take advantage of remote computer administration in their daily operations. However, some attacks have exploited the ports typically used by remote administration programs; Windows Firewall can block these ports. To provide flexibility for remote administration, the Windows Firewall: Allow remote administration exception setting is available. Configuring this setting to Enabled allows the computer to receive the unsolicited incoming messages associated with remote administration on TCP ports 135 and 445. This policy setting also allows SVCHOST.EXE and LSASS.EXE to receive unsolicited incoming messages and allows hosted services to open additional dynamically-assigned ports, typically in the range of 1044 to 1044 but potentially anywhere from 1044 to 65535. Enabling this setting also requires you to specify the IP addresses or subnets from which these incoming messages are allowed. If you configure this policy setting as Disabled,
                              Windows Firewall makes none of the described exceptions. This appendix recommends you enable this setting for enterprise computers if necessary, and to always disable the setting for high security computers. Computers in your environment should accept remote administration requests from as few computers as possible. To maximize the protection provided by the Windows Firewall, make sure to specify only the necessary IP addresses and subnets of computers used for remote administration. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-2476-0</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50041" value-id="xccdf_gov.nist_value_allow_remote_administration_exceptions_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5004"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_remote_desktop_exceptions_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow Remote Desktop exception</xccdf:title>
                        <xccdf:description>Many organizations use Remote Desktop connections in their normal troubleshooting procedures or operations. However, some attacks have occurred that exploited the ports typically used by Remote Desktop. To provide flexibility for remote administration, the Windows Firewall: Allow Remote Desktop exception setting is available. Enabling this setting configures Windows Firewall to open TCP port 3389 for inbound connections. You must also specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks this port and prevents the computer from receiving Remote Desktop requests. If an administrator attempts to open this port by adding it to a local port exceptions list, Windows Firewall does not open the port. Some attacks can exploit an open port 3389. To maintain the enhanced management capabilities provided by Remote Desktop, you should configure this setting to Enabled and
                              specify the IP addresses and subnets of the computers used for remote administration. Computers in your environment should accept Remote Desktop requests from as few computers as possible.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3304-3</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50071" value-id="xccdf_gov.nist_value_allow_remote_desktop_exceptions_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5007"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_allow_upnp_framework_exceptions_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Allow UPnP framework exception</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow UPnP framework exception setting allows a computer to receive unsolicited Plug and Play messages sent by network devices, such as routers with built-in firewalls. To receive these messages, Windows Firewall opens TCP port 2869 and UDP port 1900. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive Plug and Play messages. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from receiving Plug and Play messages.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3176-5</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50081" value-id="xccdf_gov.nist_value_allow_upnp_framework_exceptions_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5008"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_define_port_exceptions_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Define port exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall port exceptions list should be defined by Group Policy, which allows you to centrally manage and deploy your port exceptions and ensure that local administrators do not create less secure settings. The Windows Firewall: Define port exceptions policy setting allows you to centrally manage these settings. If you enable this policy setting, you can view and change the port exceptions list defined by Group Policy. To view and modify the port exceptions list, configure the policy setting to Enabled and then click the Show button. Note that if you type an invalid definition string, Windows Firewall adds it to the list without checking for errors, which means you can accidentally create multiple entries for the same port with conflicting Scope or Status values. If you disable this policy setting, the port exceptions list defined by Group Policy is deleted but other policy settings can continue to open or block ports. Also, if a local
                              port exceptions list exists, it is ignored unless you enable the Windows Firewall: Allow local port exceptions policy setting. Environments with nonstandard applications that require specific ports to be open should consider deploying program exceptions. This appendix recommends enabling this setting and specifying a list of port exceptions only when program exceptions cannot be defined. Program exceptions allow the Windows Firewall to accept unsolicited network traffic only while the specified program is running, and port exceptions keep the specified ports open at all times. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote
                              administration exception, and Windows Firewall: Define port exceptions. </xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-2866-2</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:6008"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_prohibit_notifications_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Prohibit notification</xccdf:title>
                        <xccdf:description>Windows Firewall can display notifications to users when a program requests that Windows Firewall add the program to the program exceptions list. This situation occurs when programs attempt to open a port and are not allowed to do so based on current Windows Firewall rules. The Windows Firewall: Prohibit notifications setting configures whether these settings are shown to the users. If you set this policy to Enabled, Windows Firewall prevents the display of these notifications. If you set it to Disabled, Windows Firewall allows the display of these notifications.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3198-9</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50091" value-id="xccdf_gov.nist_value_prohibit_notifications_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5009"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_prohibit_unicast_response_to_multicast_or_broadcast_requests_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Prohibit unicast response to multicast or broadcast requests</xccdf:title>
                        <xccdf:description>The Windows Firewall: Prohibit unicast response to multicast or broadcast requests setting prevents a computer from receiving unicast responses to its outgoing multicast or broadcast messages. When this policy setting is enabled and the computer sends multicast or broadcast messages to other computers, Windows Firewall blocks the unicast responses sent by those other computers. When the setting is disabled and this computer sends a multicast or broadcast message to other computers, Windows Firewall waits up to three seconds for unicast responses from the other computers and then blocks all later responses. Typically, you would not want to receive unicast responses to multicast or broadcast messages. Such responses can indicate a denial of service (DoS) attack or an attacker attempting to probe a known live computer. This appendix recommends you configure this policy setting to Enabled to help prevent this type of attack. Note: This policy setting
                              has no effect if the unicast message is a response to a Dynamic Host Configuration Protocol (DHCP) broadcast message sent by the computer. Windows Firewall always permits those DHCP unicast responses. However, this policy setting can interfere with the NetBIOS messages that detect name conflicts.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-2972-8</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50111" value-id="xccdf_gov.nist_value_prohibit_unicast_response_to_multicast_or_broadcast_requests_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5011"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_protect_all_network_connections_domain_profile" selected="false" weight="10.0">
                        <xccdf:title>Protect all Network Connections</xccdf:title>
                        <xccdf:description>Many organizations use Remote Desktop connections in their normal troubleshooting procedures or operations. However, some attacks have occurred that exploited the ports typically used by Remote Desktop. To provide flexibility for remote administration, the Windows Firewall: Allow Remote Desktop exception setting is available. Enabling this setting configures Windows Firewall to open TCP port 3389 for inbound connections. You must also specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks this port and prevents the computer from receiving Remote Desktop requests. If an administrator attempts to open this port by adding it to a local port exceptions list, Windows Firewall does not open the port. Some attacks can exploit an open port 3389. To maintain the enhanced management capabilities provided by Remote Desktop, you should configure this setting to Enabled and
                              specify the IP addresses and subnets of the computers used for remote administration. Computers in your environment should accept Remote Desktop requests from as few computers as possible.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Domain Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3154-2</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:50001" value-id="xccdf_gov.nist_value_protect_all_network_connections_domain_profile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5000"/>
                        </xccdf:check>
                  </xccdf:Rule>
            </xccdf:Group>
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <!-- ~~~  Windows Firewall Standard Profile                                                         -->
            <!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
            <xccdf:Group id="xccdf_gov.nist_group_windows_firewall_standard_profile">
                  <xccdf:title>Windows Firewall - Standard Profile</xccdf:title>
                  <xccdf:description>The Standard Profile is the default network location type when the computer is not connected to a domain. Standard profile settings should be the most restrictive because the computer is connected to a public network where security cannot be as tightly controlled as within an IT environment.</xccdf:description>
                  <xccdf:Value id="xccdf_gov.nist_value_AllowFilePrintSharingExceptionsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Allow file and print sharing exception</xccdf:title>
                        <xccdf:description>This setting allows file and printer sharing by configuring Windows Firewall to open UDP ports 137 and 138 and TCP ports 139 and 445. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive print jobs and requests for access to shared files. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from sharing files and printers. Because the computers in your environment running Windows XP will not normally be sharing files and printers, this appendix recommends you configure this setting as Disabled in all environments. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that
                              can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_AllowLocalPortExceptionsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Allow local port exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow local port exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local port exceptions list. Windows Firewall can use two port exceptions lists; the other is defined by the Windows Firewall: Define port exceptions policy setting. If you enable this policy setting, the Windows Firewall component in Control Panel allows administrators to define a local port exceptions list. If you disable this policy setting, the Windows Firewall component in Control Panel does not allow administrators to define such a list. Typically, local administrators are not authorized to override organizational policy and establish their own port exceptions list in enterprise or high security environments. For that reason, this appendix recommends configuring this option as Disabled.</xccdf:description>
                        <xccdf:value>0</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_AllowLocalProgramExceptionsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Allow local program exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow local program exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local program exceptions list. Disabling this policy setting does not allow administrators to define a local program exceptions list, and ensures that program exceptions only come from Group Policy. Setting this policy to Enabled allows local administrators to use Control Panel to define program exceptions locally. For enterprise client computers, there may be conditions that justify having the client define local program exceptions. These conditions may include applications that were not analyzed when creating the organization's firewall policy or new applications that require nonstandard port configuration. In those cases, you may choose to enable this setting, recognizing that the attack surface of the affected computers is increased.</xccdf:description>
                        <xccdf:value>0</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_AllowRemoteAdministrationExceptionsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Allow remote administration exceptions</xccdf:title>
                        <xccdf:description>Many organizations take advantage of remote computer administration in their daily operations. However, some attacks have exploited the ports typically used by remote administration programs; Windows Firewall can block these ports. To provide flexibility for remote administration, the Windows Firewall: Allow remote administration exception setting is available. Configuring this setting to Enabled allows the computer to receive the unsolicited incoming messages associated with remote administration on TCP ports 135 and 445. This policy setting also allows SVCHOST.EXE and LSASS.EXE to receive unsolicited incoming messages and allows hosted services to open additional dynamically-assigned ports, typically in the range of 1044 to 1044 but potentially anywhere from 1044 to 65535. Enabling this setting also requires you to specify the IP addresses or subnets from which these incoming messages are allowed. If you configure this policy setting as Disabled,
                              Windows Firewall makes none of the described exceptions. This appendix recommends you enable this setting for enterprise computers if necessary, and to always disable the setting for high security computers. Computers in your environment should accept remote administration requests from as few computers as possible. To maximize the protection provided by the Windows Firewall, make sure to specify only the necessary IP addresses and subnets of computers used for remote administration. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:value>0</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_AllowRemoteDesktopExceptionsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Allow Remote Desktop exception</xccdf:title>
                        <xccdf:description>Many organizations use Remote Desktop connections in their normal troubleshooting procedures or operations. However, some attacks have occurred that exploited the ports typically used by Remote Desktop. To provide flexibility for remote administration, the Windows Firewall: Allow Remote Desktop exception setting is available. Enabling this setting configures Windows Firewall to open TCP port 3389 for inbound connections. You must also specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks this port and prevents the computer from receiving Remote Desktop requests. If an administrator attempts to open this port by adding it to a local port exceptions list, Windows Firewall does not open the port. Some attacks can exploit an open port 3389. To maintain the enhanced management capabilities provided by Remote Desktop, you should configure this setting to Enabled and
                              specify the IP addresses and subnets of the computers used for remote administration. Computers in your environment should accept Remote Desktop requests from as few computers as possible.</xccdf:description>
                        <xccdf:value>0</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_AllowUPnPframeworkExceptionsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Allow UPnP framework exception</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow UPnP framework exception setting allows a computer to receive unsolicited Plug and Play messages sent by network devices, such as routers with built-in firewalls. To receive these messages, Windows Firewall opens TCP port 2869 and UDP port 1900. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive Plug and Play messages. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from receiving Plug and Play messages.</xccdf:description>
                        <xccdf:value>0</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_DoNotAllowExceptionsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Do not allow exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Do not allow exceptions setting specifies that Windows Firewall blocks all unsolicited incoming messages. This policy setting overrides all other Windows Firewall policy settings that allow such messages. If you enable this policy setting in the Windows Firewall component of Control Panel, the Don't allow exceptions check box is selected and administrators cannot clear it. Many environments contain applications and services that must be allowed to receive inbound unsolicited communications as part of their normal operation. In those cases, you may need to consider configuring this policy to Disabled to allow those applications and services to run properly. However, before making any change to this policy, you should test the environment to determine exactly what to allow and what to disallow. Note: This setting provides a strong defense against external attackers and should be set to Enabled in situations where you require
                              complete protection from external attacks such as the outbreak of a new network worm. Setting this policy to Disabled allows Windows Firewall to apply other policy settings that allow unsolicited incoming messages.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_ProhibitNotificationsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Prohibit notification</xccdf:title>
                        <xccdf:description>Windows Firewall can display notifications to users when a program requests that Windows Firewall add the program to the program exceptions list. This situation occurs when programs attempt to open a port and are not allowed to do so based on current Windows Firewall rules. The Windows Firewall: Prohibit notifications setting configures whether these settings are shown to the users. If you set this policy to Enabled, Windows Firewall prevents the display of these notifications. If you set it to Disabled, Windows Firewall allows the display of these notifications.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_ProhibitUnicastResponseToMulticastOrBroadcastRequestsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Prohibit unicast response to multicast or broadcast requests</xccdf:title>
                        <xccdf:description>The Windows Firewall: Prohibit unicast response to multicast or broadcast requests setting prevents a computer from receiving unicast responses to its outgoing multicast or broadcast messages. When this policy setting is enabled and the computer sends multicast or broadcast messages to other computers, Windows Firewall blocks the unicast responses sent by those other computers. When the setting is disabled and this computer sends a multicast or broadcast message to other computers, Windows Firewall waits up to three seconds for unicast responses from the other computers and then blocks all later responses. Typically, you would not want to receive unicast responses to multicast or broadcast messages. Such responses can indicate a denial of service (DoS) attack or an attacker attempting to probe a known live computer. This appendix recommends you configure this policy setting to Enabled to help prevent this type of attack. Note: This policy setting
                              has no effect if the unicast message is a response to a Dynamic Host Configuration Protocol (DHCP) broadcast message sent by the computer. Windows Firewall always permits those DHCP unicast responses. However, this policy setting can interfere with the NetBIOS messages that detect name conflicts.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Value id="xccdf_gov.nist_value_ProtectAllNetworkConnectionsStandardProfile_var" operator="equals" type="number">
                        <xccdf:title>Protect all Network Connections</xccdf:title>
                        <xccdf:description>The Windows Firewall: Protect all network connections setting turns on Windows Firewall, which replaces Internet Connection Firewall on all computers that are running Windows XP SP2. This appendix recommends configuring this setting to Enabled to protect all network connections for computers in all environments. If this setting is configured as Disabled, Windows Firewall is turned off and all other settings for Windows Firewall are ignored. Note: If you enable this policy setting, Windows Firewall runs and ignores the Computer Configuration\Administrative Templates\Network\Network Connections\Prohibit use of Internet Connection Firewall on your DNS domain network policy setting.</xccdf:description>
                        <xccdf:value>1</xccdf:value>
                        <xccdf:value selector="enabled">1</xccdf:value>
                        <xccdf:value selector="disabled">0</xccdf:value>
                  </xccdf:Value>
                  <xccdf:Rule id="xccdf_gov.nist_rule_AllowFilePrintSharingExceptionsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Allow file and print sharing exception</xccdf:title>
                        <xccdf:description>This setting allows file and printer sharing by configuring Windows Firewall to open UDP ports 137 and 138 and TCP ports 139 and 445. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive print jobs and requests for access to shared files. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from sharing files and printers. Because the computers in your environment running Windows XP will not normally be sharing files and printers, this appendix recommends you configure this setting as Disabled in all environments. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that
                              can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3262-3</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51051" value-id="xccdf_gov.nist_value_AllowFilePrintSharingExceptionsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5105"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_AllowICMPExceptionsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Allow ICMP exceptions (Block everything)</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow ICMP exceptions setting defines the set of Internet Control Message Protocol (ICMP) message types that Windows Firewall allows. Utilities can use ICMP messages to determine the status of other computers. For example, Ping uses the echo request message. If you set this policy setting to Enabled, you must specify which ICMP message types Windows Firewall allows the computer to send or receive. When you set this policy to Disabled, Windows Firewall blocks all unsolicited incoming ICMP message types and the listed outgoing ICMP message types. As a result, utilities that use the blocked ICMP messages will not be able to send those messages to or from the computer. Many attacker tools take advantage of computers that accept ICMP message types and use these messages to mount a variety of attacks. However, some applications require some ICMP messages in order to function properly. For that reason, this appendix recommends that
                              you configure this setting to Disabled whenever possible. If your environment requires some ICMP messages to get through Windows Firewall, configure the setting with the appropriate message types. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3081-7</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5106"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_AllowLocalPortExceptionsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Allow local port exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow local port exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local port exceptions list. Windows Firewall can use two port exceptions lists; the other is defined by the Windows Firewall: Define port exceptions policy setting. If you enable this policy setting, the Windows Firewall component in Control Panel allows administrators to define a local port exceptions list. If you disable this policy setting, the Windows Firewall component in Control Panel does not allow administrators to define such a list. Typically, local administrators are not authorized to override organizational policy and establish their own port exceptions list in enterprise or high security environments. For that reason, this appendix recommends configuring this option as Disabled.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-2989-2</xccdf:ident>
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51131" value-id="xccdf_gov.nist_value_AllowLocalPortExceptionsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5113"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_AllowLocalProgramExceptionsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Allow local program exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow local program exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local program exceptions list. Disabling this policy setting does not allow administrators to define a local program exceptions list, and ensures that program exceptions only come from Group Policy. Setting this policy to Enabled allows local administrators to use Control Panel to define program exceptions locally. For enterprise client computers, there may be conditions that justify having the client define local program exceptions. These conditions may include applications that were not analyzed when creating the organization's firewall policy or new applications that require nonstandard port configuration. In those cases, you may choose to enable this setting, recognizing that the attack surface of the affected computers is increased.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3183-1</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51031" value-id="xccdf_gov.nist_value_AllowLocalProgramExceptionsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5103"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_AllowRemoteAdministrationExceptionsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Allow remote administration exceptions Disabled</xccdf:title>
                        <xccdf:description>Many organizations take advantage of remote computer administration in their daily operations. However, some attacks have exploited the ports typically used by remote administration programs; Windows Firewall can block these ports. To provide flexibility for remote administration, the Windows Firewall: Allow remote administration exception setting is available. Configuring this setting to Enabled allows the computer to receive the unsolicited incoming messages associated with remote administration on TCP ports 135 and 445. This policy setting also allows SVCHOST.EXE and LSASS.EXE to receive unsolicited incoming messages and allows hosted services to open additional dynamically-assigned ports, typically in the range of 1044 to 1044 but potentially anywhere from 1044 to 65535. Enabling this setting also requires you to specify the IP addresses or subnets from which these incoming messages are allowed. If you configure this policy setting as Disabled,
                              Windows Firewall makes none of the described exceptions. This appendix recommends you enable this setting for enterprise computers if necessary, and to always disable the setting for high security computers. Computers in your environment should accept remote administration requests from as few computers as possible. To maximize the protection provided by the Windows Firewall, make sure to specify only the necessary IP addresses and subnets of computers used for remote administration. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-2954-6</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51041" value-id="xccdf_gov.nist_value_AllowRemoteAdministrationExceptionsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:51041"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_AllowRemoteDesktopExceptionsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Allow Remote Desktop exception</xccdf:title>
                        <xccdf:description>Many organizations use Remote Desktop connections in their normal troubleshooting procedures or operations. However, some attacks have occurred that exploited the ports typically used by Remote Desktop. To provide flexibility for remote administration, the Windows Firewall: Allow Remote Desktop exception setting is available. Enabling this setting configures Windows Firewall to open TCP port 3389 for inbound connections. You must also specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks this port and prevents the computer from receiving Remote Desktop requests. If an administrator attempts to open this port by adding it to a local port exceptions list, Windows Firewall does not open the port. Some attacks can exploit an open port 3389. To maintain the enhanced management capabilities provided by Remote Desktop, you should configure this setting to Enabled and
                              specify the IP addresses and subnets of the computers used for remote administration. Computers in your environment should accept Remote Desktop requests from as few computers as possible.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3213-6</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51071" value-id="xccdf_gov.nist_value_AllowRemoteDesktopExceptionsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5107"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_AllowUPnPframeworkExceptionsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Allow UPnP framework exception</xccdf:title>
                        <xccdf:description>The Windows Firewall: Allow UPnP framework exception setting allows a computer to receive unsolicited Plug and Play messages sent by network devices, such as routers with built-in firewalls. To receive these messages, Windows Firewall opens TCP port 2869 and UDP port 1900. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive Plug and Play messages. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from receiving Plug and Play messages.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3235-9</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51081" value-id="xccdf_gov.nist_value_AllowUPnPframeworkExceptionsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5108"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_DoNotAllowExceptionsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Do not allow exceptions</xccdf:title>
                        <xccdf:description>The Windows Firewall: Do not allow exceptions setting specifies that Windows Firewall blocks all unsolicited incoming messages. This policy setting overrides all other Windows Firewall policy settings that allow such messages. If you enable this policy setting in the Windows Firewall component of Control Panel, the Don't allow exceptions check box is selected and administrators cannot clear it. Many environments contain applications and services that must be allowed to receive inbound unsolicited communications as part of their normal operation. In those cases, you may need to consider configuring this policy to Disabled to allow those applications and services to run properly. However, before making any change to this policy, you should test the environment to determine exactly what to allow and what to disallow. Note: This setting provides a strong defense against external attackers and should be set to Enabled in situations where you require
                              complete protection from external attacks such as the outbreak of a new network worm. Setting this policy to Disabled allows Windows Firewall to apply other policy settings that allow unsolicited incoming messages.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3179-9</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51011" value-id="xccdf_gov.nist_value_DoNotAllowExceptionsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5101"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_ProhibitNotificationsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Prohibit notification</xccdf:title>
                        <xccdf:description>Windows Firewall can display notifications to users when a program requests that Windows Firewall add the program to the program exceptions list. This situation occurs when programs attempt to open a port and are not allowed to do so based on current Windows Firewall rules. The Windows Firewall: Prohibit notifications setting configures whether these settings are shown to the users. If you set this policy to Enabled, Windows Firewall prevents the display of these notifications. If you set it to Disabled, Windows Firewall allows the display of these notifications.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3134-4</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51091" value-id="xccdf_gov.nist_value_ProhibitNotificationsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5109"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_ProhibitUnicastResponseToMulticastOrBroadcastRequestsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Prohibit unicast response to multicast or broadcast requests</xccdf:title>
                        <xccdf:description>The Windows Firewall: Prohibit unicast response to multicast or broadcast requests setting prevents a computer from receiving unicast responses to its outgoing multicast or broadcast messages. When this policy setting is enabled and the computer sends multicast or broadcast messages to other computers, Windows Firewall blocks the unicast responses sent by those other computers. When the setting is disabled and this computer sends a multicast or broadcast message to other computers, Windows Firewall waits up to three seconds for unicast responses from the other computers and then blocks all later responses. Typically, you would not want to receive unicast responses to multicast or broadcast messages. Such responses can indicate a denial of service (DoS) attack or an attacker attempting to probe a known live computer. This appendix recommends you configure this policy setting to Enabled to help prevent this type of attack. Note: This policy setting
                              has no effect if the unicast message is a response to a Dynamic Host Configuration Protocol (DHCP) broadcast message sent by the computer. Windows Firewall always permits those DHCP unicast responses. However, this policy setting can interfere with the NetBIOS messages that detect name conflicts.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3103-9</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51111" value-id="xccdf_gov.nist_value_ProhibitUnicastResponseToMulticastOrBroadcastRequestsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5111"/>
                        </xccdf:check>
                  </xccdf:Rule>
                  <xccdf:Rule id="xccdf_gov.nist_rule_ProtectAllNetworkConnectionsStandardProfile" selected="false" weight="10.0">
                        <xccdf:title>Protect all Network Connections</xccdf:title>
                        <xccdf:description>Many organizations use Remote Desktop connections in their normal troubleshooting procedures or operations. However, some attacks have occurred that exploited the ports typically used by Remote Desktop. To provide flexibility for remote administration, the Windows Firewall: Allow Remote Desktop exception setting is available. Enabling this setting configures Windows Firewall to open TCP port 3389 for inbound connections. You must also specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks this port and prevents the computer from receiving Remote Desktop requests. If an administrator attempts to open this port by adding it to a local port exceptions list, Windows Firewall does not open the port. Some attacks can exploit an open port 3389. To maintain the enhanced management capabilities provided by Remote Desktop, you should configure this setting to Enabled and
                              specify the IP addresses and subnets of the computers used for remote administration. Computers in your environment should accept Remote Desktop requests from as few computers as possible.</xccdf:description>
                        <xccdf:reference>
                              <dc:type>GPO</dc:type>
                              <dc:source>Computer Configuration\Administrative Templates\Network\Network Connections\Windows Firewall\Standard Profile</dc:source>
                        </xccdf:reference>
                        <xccdf:ident system="http://cce.mitre.org">CCE-3284-7</xccdf:ident>
                        
                        <xccdf:check system="http://oval.mitre.org/XMLSchema/oval-definitions-5">
                              <xccdf:check-export export-name="oval:gov.nist.USGCB.xpfirewall:var:51001" value-id="xccdf_gov.nist_value_ProtectAllNetworkConnectionsStandardProfile_var"/>
                              <xccdf:check-content-ref href="USGCB-Windows-XP-firewall-oval.xml" name="oval:gov.nist.USGCB.xpfirewall:def:5100"/>
                        </xccdf:check>
                  </xccdf:Rule>
            </xccdf:Group>
      </xccdf:Group>
      <!-- **************************************************************************************************** -->
      <!-- ***  4 - Security Patches                                                                        *** -->
      <!-- **************************************************************************************************** -->
      <!--                                                                                                      -->
      <!-- see operating system benchmark                                                                       -->
      <!--                                                                                                      -->
      <!-- ==================================================================================================== -->
      <!-- ==================================================================================================== -->
      <!-- ==================================================================================================== -->
</xccdf:Benchmark>
  </component>
  <component id="scap_gov.nist_comp_USGCB-Windows-XP-firewall-oval.xml" timestamp="2012-02-24T10:00:00">
    <oval_definitions xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:ind-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:win-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-common-5 http://oval.mitre.org/language/version5.10/ovaldefinition/complete/oval-common-schema.xsd    http://oval.mitre.org/XMLSchema/oval-definitions-5 http://oval.mitre.org/language/version5.10/ovaldefinition/complete/oval-definitions-schema.xsd    http://oval.mitre.org/XMLSchema/oval-definitions-5#windows http://oval.mitre.org/language/version5.10/ovaldefinition/complete/windows-definitions-schema.xsd    http://oval.mitre.org/XMLSchema/oval-definitions-5#independent http://oval.mitre.org/language/version5.10/ovaldefinition/complete/independent-definitions-schema.xsd">
    <generator>
        <oval:product_name>National Institute of Standards and Technology</oval:product_name>
        <oval:schema_version>5.4</oval:schema_version>
      <oval:timestamp>2012-02-24T10:00:00.000-04:00</oval:timestamp>
    </generator>
    <!-- ==================================================================================================== -->
    <!-- ===========================================  DEFINITIONS  =========================================== -->
    <!-- ==================================================================================================== -->
    <definitions>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5000" version="1">
            <metadata>
                <title>Protect all Network Connections - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3154-2" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Protect all network connections setting turns on Windows Firewall, which replaces Internet Connection Firewall on all computers that are running Windows XP SP2. This appendix recommends configuring this setting to Enabled to protect all network connections for computers in all environments. If this setting is configured as Disabled, Windows Firewall is turned off and all other settings for Windows Firewall are ignored. Note: If you enable this policy setting, Windows Firewall runs and ignores the Computer Configuration\Administrative Templates\Network\Network Connections\Prohibit use of Internet Connection Firewall on your DNS domain network policy setting.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP is installed" definition_ref="oval:org.mitre.oval:def:105"/>
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!EnableFirewall exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50001"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!EnableFirewall is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50002"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5003" version="1">
            <metadata>
                <title>Allow local program exceptions - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-2828-2" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Allow local program exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local program exceptions list. Disabling this policy setting does not allow administrators to define a local program exceptions list, and ensures that program exceptions only come from Group Policy. Setting this policy to Enabled allows local administrators to use Control Panel to define program exceptions locally. For enterprise client computers, there may be conditions that justify having the client define local program exceptions. These conditions may include applications that were not analyzed when creating the organization's firewall policy or new applications that require nonstandard port configuration. In those cases, you may choose to enable this setting, recognizing that the attack surface of the affected computers is increased.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\AuthorizedApplications!AllowUserPrefMerge  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50031"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\AuthorizedApplications!AllowUserPrefMerge  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50032"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5004" version="2">
            <metadata>
                <title>Allow remote administration exceptions - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-2476-0" source="http://cce.mitre.org"/>
                
                <description>Many organizations take advantage of remote computer administration in their daily operations. However, some attacks have exploited the ports typically used by remote administration programs; Windows Firewall can block these ports. To provide flexibility for remote administration, the Windows Firewall: Allow remote administration exception setting is available. Configuring this setting to Enabled allows the computer to receive the unsolicited incoming messages associated with remote administration on TCP ports 135 and 445. This policy setting also allows SVCHOST.EXE and LSASS.EXE to receive unsolicited incoming messages and allows hosted services to open additional dynamically-assigned ports, typically in the range of 1024 to 1034 but potentially anywhere from 1024 to 65535. Enabling this setting also requires you to specify the IP addresses or subnets from which these incoming messages are allowed. If you configure this policy setting as Disabled, Windows
                    Firewall makes none of the described exceptions. This appendix recommends you enable this setting for enterprise computers if necessary, and to always disable the setting for high security computers. Computers in your environment should accept remote administration requests from as few computers as possible. To maximize the protection provided by the Windows Firewall, make sure to specify only the necessary IP addresses and subnets of computers used for remote administration. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\RemoteAdminSettings!Enabled  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50041"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\RemoteAdminSettings!Enabled  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50042"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5005" version="1">
            <metadata>
                <title>Allow file and print sharing exception - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3247-4" source="http://cce.mitre.org"/>
                
                <description>This setting allows file and printer sharing by configuring Windows Firewall to open UDP ports 137 and 138 and TCP ports 139 and 445. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive print jobs and requests for access to shared files. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from sharing files and printers. Because the computers in your environment running Windows XP will not normally be sharing files and printers, this appendix recommends you configure this setting as Disabled in all environments. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open
                    TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\FileAndPrint!Enabled  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50051"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\FileAndPrint!Enabled  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50052"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5006" version="2">
            <metadata>
                <title>Allow ICMP exceptions (Allow inbound echo request and block everything else) - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3141-9" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Allow ICMP exceptions setting defines the set of Internet Control Message Protocol (ICMP) message types that Windows Firewall allows. Utilities can use ICMP messages to determine the status of other computers. For example, Ping uses the echo request message. If you set this policy setting to Enabled, you must specify which ICMP message types Windows Firewall allows the computer to send or receive. When you set this policy to Disabled, Windows Firewall blocks all unsolicited incoming ICMP message types and the listed outgoing ICMP message types. As a result, utilities that use the blocked ICMP messages will not be able to send those messages to or from the computer. Many attacker tools take advantage of computers that accept ICMP message types and use these messages to mount a variety of attacks. However, some applications require some ICMP messages in order to function properly. For that reason, this appendix recommends that you
                    configure this setting to Disabled whenever possible. If your environment requires some ICMP messages to get through Windows Firewall, configure the setting with the appropriate message types. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowInboundEchoRequest is set to 1 or 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50061"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowInboundMaskRequest is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50062"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowInboundRouterRequest is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50063"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowInboundTimestampRequest is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50064"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundDestinationUnreachable is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50065"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundPacketTooBig is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50066"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundParameterProblem is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50067"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundSourceQuench is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50068"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundTimeExceeded is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50069"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowRedirect is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50060"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5007" version="2">
            <metadata>
                <title>Allow Remote Desktop exception - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3304-3" source="http://cce.mitre.org"/>
                
                <description>Many organizations use Remote Desktop connections in their normal troubleshooting procedures or operations. However, some attacks have occurred that exploited the ports typically used by Remote Desktop. To provide flexibility for remote administration, the Windows Firewall: Allow Remote Desktop exception setting is available. Enabling this setting configures Windows Firewall to open TCP port 3389 for inbound connections. You must also specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks this port and prevents the computer from receiving Remote Desktop requests. If an administrator attempts to open this port by adding it to a local port exceptions list, Windows Firewall does not open the port. Some attacks can exploit an open port 3389. To maintain the enhanced management capabilities provided by Remote Desktop, you should configure this setting to Enabled and specify
                    the IP addresses and subnets of the computers used for remote administration. Computers in your environment should accept Remote Desktop requests from as few computers as possible.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\RemoteDesktop!Enabled exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50071"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\RemoteDesktop!Enabled matches oval:gov.nist.USGCB.xpfirewall:var:50071" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50072"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5008" version="1">
            <metadata>
                <title>Allow UPnP framework exception - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3176-5" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Allow UPnP framework exception setting allows a computer to receive unsolicited Plug and Play messages sent by network devices, such as routers with built-in firewalls. To receive these messages, Windows Firewall opens TCP port 2869 and UDP port 1900. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive Plug and Play messages. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from receiving Plug and Play messages.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\UPnPFramework!Enabled  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50081"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\UPnPFrameworkt!Enabled  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50082"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5009" version="1">
            <metadata>
                <title>Prohibit notification - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3198-9" source="http://cce.mitre.org"/>
                
                <description>Windows Firewall can display notifications to users when a program requests that Windows Firewall add the program to the program exceptions list. This situation occurs when programs attempt to open a port and are not allowed to do so based on current Windows Firewall rules. The Windows Firewall: Prohibit notifications setting configures whether these settings are shown to the users. If you set this policy to Enabled, Windows Firewall prevents the display of these notifications. If you set it to Disabled, Windows Firewall allows the display of these notifications.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!DisableNotifications  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50091"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!DisableNotifications  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50092"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5011" version="1">
            <metadata>
                <title>Prohibit unicast response to multicast or broadcast requests - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-2972-8" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Prohibit unicast response to multicast or broadcast requests setting prevents a computer from receiving unicast responses to its outgoing multicast or broadcast messages. When this policy setting is enabled and the computer sends multicast or broadcast messages to other computers, Windows Firewall blocks the unicast responses sent by those other computers. When the setting is disabled and this computer sends a multicast or broadcast message to other computers, Windows Firewall waits up to three seconds for unicast responses from the other computers and then blocks all later responses. Typically, you would not want to receive unicast responses to multicast or broadcast messages. Such responses can indicate a denial of service (DoS) attack or an attacker attempting to probe a known live computer. This appendix recommends you configure this policy setting to Enabled to help prevent this type of attack. Note: This policy setting has no
                    effect if the unicast message is a response to a Dynamic Host Configuration Protocol (DHCP) broadcast message sent by the computer. Windows Firewall always permits those DHCP unicast responses. However, this policy setting can interfere with the NetBIOS messages that detect name conflicts.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!DisableUnicastResponsesToMulticastBroadcast  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50111"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!DisableUnicastResponsesToMulticastBroadcast  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50112"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5013" version="1">
            <metadata>
                <title>Allow local port exceptions - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3258-1" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Allow local port exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local port exceptions list. Windows Firewall can use two port exceptions lists; the other is defined by the Windows Firewall: Define port exceptions policy setting. If you enable this policy setting, the Windows Firewall component in Control Panel allows administrators to define a local port exceptions list. If you disable this policy setting, the Windows Firewall component in Control Panel does not allow administrators to define such a list. Typically, local administrators are not authorized to override organizational policy and establish their own port exceptions list in enterprise or high security environments. For that reason, this appendix recommends configuring this option as Disabled.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\GloballyOpenPorts!AllowUserPrefMerge  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50131"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\GloballyOpenPorts!AllowUserPrefMerge  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50132"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5014" version="1">
            <metadata>
                <title>Allow Logging: Log Dropped Packets - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-2965-2" source="http://cce.mitre.org"/>
                
                <description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and administrators
                    cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogDroppedPackets  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50141"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogDroppedPackets  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50142"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5015" version="1">
            <metadata>
                <title>Allow Logging: Log Successful Connections - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3090-8" source="http://cce.mitre.org"/>
                
                <description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and administrators
                    cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogSuccessfulConnections  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50151"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogSuccessfulConnections  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50152"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5016" version="1">
            <metadata>
                <title>Allow Logging: Log Size - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-2958-7" source="http://cce.mitre.org"/>
                
                <description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and administrators
                    cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogFileSize  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50161"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogFileSize  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50162"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5017" version="3">
            <metadata>
                <title>Allow Logging: Log Path - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-2923-1" source="http://cce.mitre.org"/>
                
                <description>Allows Windows Firewall to record information about the unsolicited incoming messages that it receives. If you enable this policy setting, Windows Firewall writes the information to a log file. You must provide the name, location, and maximum size of the log file. The location can contain environment variables. You must also specify whether to record information about incoming messages that the firewall blocks (drops) and information about successful incoming and outgoing connections. Windows Firewall does not provide an option to log successful incoming messages. If you disable this policy setting, Windows Firewall does not record information in the log file. If you enable this policy setting, and Windows Firewall creates the log file and adds information, then upon disabling this policy setting, Windows Firewall leaves the log file intact. In the Windows Firewall component of Control Panel, the "Security Logging" settings are cleared and administrators
                    cannot select them. If you do not configure this policy setting, Windows Firewall behaves as if the policy setting were disabled, except that administrators can choose whether to select the "Security Logging" settings.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogFilePath  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50171"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogFilePath case insensitive equals oval:gov.nist.USGCB.xpfirewall:var:50171" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50172"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5100" version="1">
            <metadata>
                <title>Protect all Network Connections - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3284-7" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Protect all network connections setting turns on Windows Firewall, which replaces Internet Connection Firewall on all computers that are running Windows XP SP2. This appendix recommends configuring this setting to Enabled to protect all network connections for computers in all environments. If this setting is configured as Disabled, Windows Firewall is turned off and all other settings for Windows Firewall are ignored. Note: If you enable this policy setting, Windows Firewall runs and ignores the Computer Configuration\Administrative Templates\Network\Network Connections\Prohibit use of Internet Connection Firewall on your DNS domain network policy setting.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!EnableFirewall exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51001"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!EnableFirewall is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51002"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5101" version="1">
            <metadata>
                <title>Do not allow exceptions - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3179-9" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Do not allow exceptions setting specifies that Windows Firewall blocks all unsolicited incoming messages. This policy setting overrides all other Windows Firewall policy settings that allow such messages. If you enable this policy setting in the Windows Firewall component of Control Panel, the Don't allow exceptions check box is selected and administrators cannot clear it. Many environments contain applications and services that must be allowed to receive inbound unsolicited communications as part of their normal operation. In those cases, you may need to consider configuring this policy to Disabled to allow those applications and services to run properly. However, before making any change to this policy, you should test the environment to determine exactly what to allow and what to disallow. Note: This setting provides a strong defense against external attackers and should be set to Enabled in situations where you require complete
                    protection from external attacks such as the outbreak of a new network worm. Setting this policy to Disabled allows Windows Firewall to apply other policy settings that allow unsolicited incoming messages.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DoNotAllowExceptions exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51011"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DoNotAllowExceptions is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51012"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5103" version="1">
            <metadata>
                <title>Allow local program exceptions - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3183-1" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Allow local program exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local program exceptions list. Disabling this policy setting does not allow administrators to define a local program exceptions list, and ensures that program exceptions only come from Group Policy. Setting this policy to Enabled allows local administrators to use Control Panel to define program exceptions locally. For enterprise client computers, there may be conditions that justify having the client define local program exceptions. These conditions may include applications that were not analyzed when creating the organization's firewall policy or new applications that require nonstandard port configuration. In those cases, you may choose to enable this setting, recognizing that the attack surface of the affected computers is increased.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\AuthorizedApplications!AllowUserPrefMerge  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51031"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\AuthorizedApplications!AllowUserPrefMerge  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51032"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5105" version="1">
            <metadata>
                <title>Allow file and print sharing exception - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3262-3" source="http://cce.mitre.org"/>
                
                <description>This setting allows file and printer sharing by configuring Windows Firewall to open UDP ports 137 and 138 and TCP ports 139 and 445. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive print jobs and requests for access to shared files. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from sharing files and printers. Because the computers in your environment running Windows XP will not normally be sharing files and printers, this appendix recommends you configure this setting as Disabled in all environments. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open
                    TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\FileAndPrint!Enabled  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51051"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\FileAndPrint!Enabled  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51052"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5106" version="1">
            <metadata>
                <title>Allow ICMP exceptions (Allow inbound echo request and block everything else) - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3081-7" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Allow ICMP exceptions setting defines the set of Internet Control Message Protocol (ICMP) message types that Windows Firewall allows. Utilities can use ICMP messages to determine the status of other computers. For example, Ping uses the echo request message. If you set this policy setting to Enabled, you must specify which ICMP message types Windows Firewall allows the computer to send or receive. When you set this policy to Disabled, Windows Firewall blocks all unsolicited incoming ICMP message types and the listed outgoing ICMP message types. As a result, utilities that use the blocked ICMP messages will not be able to send those messages to or from the computer. Many attacker tools take advantage of computers that accept ICMP message types and use these messages to mount a variety of attacks. However, some applications require some ICMP messages in order to function properly. For that reason, this appendix recommends that you
                    configure this setting to Disabled whenever possible. If your environment requires some ICMP messages to get through Windows Firewall, configure the setting with the appropriate message types. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowInboundEchoRequest is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51061"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowInboundMaskRequest is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51062"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowInboundRouterRequest is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51063"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowInboundTimestampRequest is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51064"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundDestinationUnreachable is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51065"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundPacketTooBig is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51066"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundParameterProblem is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51067"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundSourceQuench is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51068"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundTimeExceeded is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51069"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowRedirect is set to 0" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51060"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5107" version="1">
            <metadata>
                <title>Allow Remote Desktop exception - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3213-6" source="http://cce.mitre.org"/>
                
                <description>Many organizations use Remote Desktop connections in their normal troubleshooting procedures or operations. However, some attacks have occurred that exploited the ports typically used by Remote Desktop. To provide flexibility for remote administration, the Windows Firewall: Allow Remote Desktop exception setting is available. Enabling this setting configures Windows Firewall to open TCP port 3389 for inbound connections. You must also specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks this port and prevents the computer from receiving Remote Desktop requests. If an administrator attempts to open this port by adding it to a local port exceptions list, Windows Firewall does not open the port. Some attacks can exploit an open port 3389. To maintain the enhanced management capabilities provided by Remote Desktop, you should configure this setting to Enabled and specify
                    the IP addresses and subnets of the computers used for remote administration. Computers in your environment should accept Remote Desktop requests from as few computers as possible.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\RemoteDesktop!Enabled  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51071"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\RemoteDesktop!Enabled  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51072"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5108" version="1">
            <metadata>
                <title>Allow UPnP framework exception - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3235-9" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Allow UPnP framework exception setting allows a computer to receive unsolicited Plug and Play messages sent by network devices, such as routers with built-in firewalls. To receive these messages, Windows Firewall opens TCP port 2869 and UDP port 1900. If you enable this policy setting, Windows Firewall opens these ports so that the computer can receive Plug and Play messages. You must specify the IP addresses or subnets from which these incoming messages are allowed. If you disable this policy setting, Windows Firewall blocks these ports and prevents the computer from receiving Plug and Play messages.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\UPnPFramework!Enabled  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51081"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\UPnPFrameworkt!Enabled  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51082"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5109" version="1">
            <metadata>
                <title>Prohibit notification - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3134-4" source="http://cce.mitre.org"/>
                
                <description>Windows Firewall can display notifications to users when a program requests that Windows Firewall add the program to the program exceptions list. This situation occurs when programs attempt to open a port and are not allowed to do so based on current Windows Firewall rules. The Windows Firewall: Prohibit notifications setting configures whether these settings are shown to the users. If you set this policy to Enabled, Windows Firewall prevents the display of these notifications. If you set it to Disabled, Windows Firewall allows the display of these notifications.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DisableNotifications  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51091"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DisableNotifications  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51092"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5111" version="1">
            <metadata>
                <title>Prohibit unicast response to multicast or broadcast requests - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-3103-9" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Prohibit unicast response to multicast or broadcast requests setting prevents a computer from receiving unicast responses to its outgoing multicast or broadcast messages. When this policy setting is enabled and the computer sends multicast or broadcast messages to other computers, Windows Firewall blocks the unicast responses sent by those other computers. When the setting is disabled and this computer sends a multicast or broadcast message to other computers, Windows Firewall waits up to three seconds for unicast responses from the other computers and then blocks all later responses. Typically, you would not want to receive unicast responses to multicast or broadcast messages. Such responses can indicate a denial of service (DoS) attack or an attacker attempting to probe a known live computer. This appendix recommends you configure this policy setting to Enabled to help prevent this type of attack. Note: This policy setting has no
                    effect if the unicast message is a response to a Dynamic Host Configuration Protocol (DHCP) broadcast message sent by the computer. Windows Firewall always permits those DHCP unicast responses. However, this policy setting can interfere with the NetBIOS messages that detect name conflicts.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DisableUnicastResponsesToMulticastBroadcast  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51111"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DisableUnicastResponsesToMulticastBroadcast  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51112"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:5113" version="1">
            <metadata>
                <title>Allow local port exceptions - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-2989-2" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall: Allow local port exceptions setting allows administrators to use the Windows Firewall component in Control Panel to define a local port exceptions list. Windows Firewall can use two port exceptions lists; the other is defined by the Windows Firewall: Define port exceptions policy setting. If you enable this policy setting, the Windows Firewall component in Control Panel allows administrators to define a local port exceptions list. If you disable this policy setting, the Windows Firewall component in Control Panel does not allow administrators to define such a list. Typically, local administrators are not authorized to override organizational policy and establish their own port exceptions list in enterprise or high security environments. For that reason, this appendix recommends configuring this option as Disabled.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\GloballyOpenPorts!AllowUserPrefMerge  exists" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51131"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\GloballyOpenPorts!AllowUserPrefMerge  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51132"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:6008" version="1">
            <metadata>
                <title>Define port exceptions - Domain Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-2866-2" source="http://cce.mitre.org"/>
                
                <description>The Windows Firewall port exceptions list should be defined by Group Policy, which allows you to centrally manage and deploy your port exceptions and ensure that local administrators do not create less secure settings. The Windows Firewall: Define port exceptions policy setting allows you to centrally manage these settings. If you enable this policy setting, you can view and change the port exceptions list defined by Group Policy. To view and modify the port exceptions list, configure the policy setting to Enabled and then click the Show button. Note that if you type an invalid definition string, Windows Firewall adds it to the list without checking for errors, which means you can accidentally create multiple entries for the same port with conflicting Scope or Status values. If you disable this policy setting, the port exceptions list defined by Group Policy is deleted but other policy settings can continue to open or block ports. Also, if a local port
                    exceptions list exists, it is ignored unless you enable the Windows Firewall: Allow local port exceptions policy setting. Environments with nonstandard applications that require specific ports to be open should consider deploying program exceptions. This appendix recommends enabling this setting and specifying a list of port exceptions only when program exceptions cannot be defined. Program exceptions allow the Windows Firewall to accept unsolicited network traffic only while the specified program is running, and port exceptions keep the specified ports open at all times. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception,
                    and Windows Firewall: Define port exceptions.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\GloballyOpenPorts!Enabled  exists" negate="true" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:50085"/>
            </criteria>
        </definition>
        <definition class="compliance" id="oval:gov.nist.USGCB.xpfirewall:def:51041" version="1">
            <metadata>
                <title>Allow remote administration exceptions disable - Standard Profile</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="CCE-2954-6" source="http://cce.mitre.org"/>
                
                <description>Many organizations take advantage of remote computer administration in their daily operations. However, some attacks have exploited the ports typically used by remote administration programs; Windows Firewall can block these ports. To provide flexibility for remote administration, the Windows Firewall: Allow remote administration exception setting is available. Configuring this setting to Enabled allows the computer to receive the unsolicited incoming messages associated with remote administration on TCP ports 135 and 445. This policy setting also allows SVCHOST.EXE and LSASS.EXE to receive unsolicited incoming messages and allows hosted services to open additional dynamically-assigned ports, typically in the range of 1024 to 1034 but potentially anywhere from 1024 to 65535. Enabling this setting also requires you to specify the IP addresses or subnets from which these incoming messages are allowed. If you configure this policy setting as Disabled, Windows
                    Firewall makes none of the described exceptions. This appendix recommends you enable this setting for enterprise computers if necessary, and to always disable the setting for high security computers. Computers in your environment should accept remote administration requests from as few computers as possible. To maximize the protection provided by the Windows Firewall, make sure to specify only the necessary IP addresses and subnets of computers used for remote administration. Note: If any policy setting opens TCP port 445, Windows Firewall allows inbound ICMP echo request messages (such as those sent by the Ping utility), even if the Windows Firewall: Allow ICMP exceptions policy setting would block them. Policy settings that can open TCP port 445 include Windows Firewall: Allow file and printer sharing exception, Windows Firewall: Allow remote administration exception, and Windows Firewall: Define port exceptions.</description>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP SP2 or later is installed" definition_ref="oval:org.mitre.oval:def:521"/>
                <criteria operator="OR">
                    <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\RemoteAdminSetting!Enabled  exists" negate="true" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51041"/>
                    <criterion comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\RemoteAdminSetting!Enabled  is set to the variable defined in the profile" test_ref="oval:gov.nist.USGCB.xpfirewall:tst:51042"/>
                </criteria>
            </criteria>
        </definition>
        <!--====================================================================================================-->
        <!--=====================================  EXTENDED DEFINITIONS  =========================================-->
        <!--====================================================================================================-->
        <definition class="inventory" id="oval:org.mitre.oval:def:521" version="5">
            <metadata>
                <title>Microsoft Windows XP SP2 or later is installed</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <description>The operating system installed on the system is Microsoft Windows XP SP2 or later</description>
                <oval_repository>
                    <dates>
                        <submitted date="2006-07-25T12:05:33">
                            <contributor organization="ThreatGuard, Inc.">Robert L. Hollis</contributor>
                        </submitted>
                        <status_change date="2006-07-27T20:15:00.000-04:00">accepted</status_change>
                        <status_change date="2006-09-27T12:29:29.930-04:00">INTERIM</status_change>
                        <status_change date="2006-10-16T15:58:43.496-04:00">ACCEPTED</status_change>
                        <modified comment="Added CPE reference." date="2007-04-30T07:48:00.073-04:00">
                            <contributor organization="The MITRE Corporation">Jonathan Baker</contributor>
                        </modified>
                        <status_change date="2007-04-30T08:00:54.097-04:00">INTERIM</status_change>
                        <status_change date="2007-05-23T15:05:48.210-04:00">ACCEPTED</status_change>
                        <modified comment="Changed the CPE reference" date="2008-04-04T11:17:00.488-04:00">
                            <contributor organization="The MITRE Corporation">Andrew Buttner</contributor>
                        </modified>
                        <status_change date="2008-04-04T11:27:40.511-04:00">INTERIM</status_change>
                        <status_change date="2008-04-21T04:00:20.931-04:00">ACCEPTED</status_change>
                        <modified comment="Removed Microsoft reference" date="2009-06-01T16:05:28.035-04:00">
                            <contributor organization="The MITRE Corporation">Brendan Miles</contributor>
                        </modified>
                        <status_change date="2009-06-08T04:00:40.693-04:00">INTERIM</status_change>
                        <status_change date="2009-06-29T04:00:25.177-04:00">ACCEPTED</status_change>
                        <modified comment="Removed the CPE reference, as references should only exist on definitions that check for a set version (not a range)" date="2010-01-13T14:38:00.684-05:00">
                            <contributor organization="The MITRE Corporation">Mike Lah</contributor>
                        </modified>
                        <status_change date="2010-01-13T14:40:10.691-05:00">INTERIM</status_change>
                        <status_change date="2010-02-01T04:00:08.604-05:00">ACCEPTED</status_change>
                    </dates>
                    <status>ACCEPTED</status>
                </oval_repository>
            </metadata>
            <criteria operator="AND">
                <extend_definition comment="Microsoft Windows XP is installed" definition_ref="oval:org.mitre.oval:def:105"/>
                <criterion comment="Win2K/XP/2003 service pack 2 (or later) is installed" test_ref="oval:org.mitre.oval:tst:2837"/>
            </criteria>
        </definition>
        <definition class="inventory" id="oval:org.mitre.oval:def:105" version="5">
            <metadata>
                <title>Microsoft Windows XP is installed</title>
                <affected family="windows">
                    <platform>Microsoft Windows XP</platform>
                </affected>
                <reference ref_id="cpe:/o:microsoft:windows_xp" source="CPE"/>
                <description>The operating system installed on the system is Microsoft Windows XP.</description>
                <oval_repository>
                    <dates>
                        <submitted date="2006-06-26T12:55:00.000-04:00">
                            <contributor organization="The MITRE Corporation">Andrew Buttner</contributor>
                        </submitted>
                        <status_change date="2006-06-26T12:55:00.000-04:00">ACCEPTED</status_change>
                        <modified comment="Added CPE reference." date="2007-04-30T07:48:00.244-04:00">
                            <contributor organization="The MITRE Corporation">Jonathan Baker</contributor>
                        </modified>
                        <status_change date="2007-04-30T08:01:55.267-04:00">INTERIM</status_change>
                        <status_change date="2007-05-23T15:05:25.969-04:00">ACCEPTED</status_change>
                        <modified comment="Changed the CPE reference" date="2008-04-04T11:17:00.073-04:00">
                            <contributor organization="The MITRE Corporation">Andrew Buttner</contributor>
                        </modified>
                        <status_change date="2008-04-04T11:27:52.098-04:00">INTERIM</status_change>
                        <status_change date="2008-04-21T04:00:10.499-04:00">ACCEPTED</status_change>
                        <modified comment="Changed the test for windows to be case insensitive and replaced the test for Windows 5.1 with a new test for Windows XP" date="2009-12-02T16:05:00.749-04:00">
                            <contributor organization="National Institute of Standards and Technology">Tim Harrison</contributor>
                        </modified>
                        <status_change date="2009-12-02T16:05:00.749-04:00">INTERIM</status_change>
                        <modified comment="Added anchors and spaces to regular expression" date="2009-12-04T14:56:00.359-05:00">
                            <contributor organization="National Institute of Standards and Technology">Tim Harrison</contributor>
                        </modified>
                        <modified comment="Updating regex to include parenthesis" date="2009-12-08T17:32:00.792-05:00">
                            <contributor organization="National Institute of Standards and Technology">Tim Harrison</contributor>
                        </modified>
                        <status_change date="2010-01-04T04:01:15.920-05:00">ACCEPTED</status_change>
                    </dates>
                    <status>ACCEPTED</status>
                </oval_repository>
            </metadata>
            <criteria operator="AND">
                <criterion comment="the installed operating system is part of the Microsoft Windows family" test_ref="oval:org.mitre.oval:tst:99"/>
                <criterion comment="Windows XP is installed" test_ref="oval:org.mitre.oval:tst:11179"/>
            </criteria>
        </definition>
    </definitions>
    <!-- ==================================================================================================== -->
    <!-- =============================================  TESTS  ============================================== -->
    <!-- ==================================================================================================== -->
    <tests>
        <family_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" check="only one" check_existence="at_least_one_exists" comment="the installed operating system is part of the Microsoft Windows family" id="oval:org.mitre.oval:tst:99" version="1">
            <object object_ref="oval:org.mitre.oval:obj:99"/>
            <state state_ref="oval:org.mitre.oval:ste:99"/>
        </family_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="at least one" check_existence="at_least_one_exists" comment="Win2K/XP/2003 service pack 2 (or later) is installed" id="oval:org.mitre.oval:tst:2837" version="1">
            <object object_ref="oval:org.mitre.oval:obj:717"/>
            <state state_ref="oval:org.mitre.oval:ste:2656"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="at least one" check_existence="at_least_one_exists" comment="Windows XP is installed" id="oval:org.mitre.oval:tst:11179" version="3">
            <object object_ref="oval:org.mitre.oval:obj:5590"/>
            <state state_ref="oval:org.mitre.oval:ste:5477"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!EnableFirewall exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50001" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50001"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!EnableFirewall is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50002" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50001"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50002"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\AuthorizedApplications!AllowUserPrefMerge  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50031" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50031"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\AuthorizedApplications!AllowUserPrefMerge  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50032" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50031"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50032"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\RemoteAdminSettings!Enabled  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50041" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50041"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\RemoteAdminSettings!Enabled matches oval:gov.nist.USGCB.xpfirewall:var:50041" id="oval:gov.nist.USGCB.xpfirewall:tst:50042" version="2">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50041"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50042"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\FileAndPrint!Enabled  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50051" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50051"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\FileAndPrint!Enabled  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50052" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50051"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50052"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowRedirect is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50060" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50060"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowInboundEchoRequest is set to 1 or 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50061" version="2">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50061"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50061"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowInboundMaskRequest is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50062" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50062"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowInboundRouterRequest is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50063" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50063"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowInboundTimestampRequest is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50064" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50064"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundDestinationUnreachable is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50065" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50065"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundPacketTooBig is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50066" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50066"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundParameterProblem is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50067" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50067"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundSourceQuench is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50068" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50068"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings!AllowOutboundTimeExceeded is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:50069" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50069"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\RemoteDesktop!Enabled  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50071" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50071"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\RemoteDesktop!Enabled matches oval:gov.nist.USGCB.xpfirewall:var:50071" id="oval:gov.nist.USGCB.xpfirewall:tst:50072" version="2">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50071"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50072"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\UPnPFramework!Enabled  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50081" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50081"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\UPnPFrameworkt!Enabled  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50082" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50081"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50082"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\GloballyOpenPorts!Enabled  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50085" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50085"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!DisableNotifications  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50091" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50091"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!DisableNotifications  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50092" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50091"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50092"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!DisableUnicastResponsesToMulticastBroadcast  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50111" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50111"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile!DisableUnicastResponsesToMulticastBroadcast  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50112" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50111"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50112"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\GloballyOpenPorts!AllowUserPrefMerge  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50131" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50131"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\GloballyOpenPorts!AllowUserPrefMerge  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50132" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50131"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50132"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogDroppedPackets  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50141" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50141"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogDroppedPackets  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50142" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50141"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50142"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogSuccessfulConnections  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50151" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50151"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogSuccessfulConnections  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50152" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50151"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50152"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogFileSize  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50161" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50161"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogFileSize  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:50162" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50161"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50162"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogFilePath  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:50171" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50171"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging!LogFilePath case insensitive equals oval:gov.nist.USGCB.xpfirewall:var:50171" id="oval:gov.nist.USGCB.xpfirewall:tst:50172" version="3">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:50171"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:50172"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!EnableFirewall exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51001" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51001"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!EnableFirewall is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51002" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51001"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51002"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DoNotAllowExceptions exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51011" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51011"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DoNotAllowExceptions is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51012" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51011"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51012"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\AuthorizedApplications!AllowUserPrefMerge  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51031" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51031"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\AuthorizedApplications!AllowUserPrefMerge  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51032" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51031"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51032"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\RemoteAdminSetting!Enabled  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51041" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51041"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\RemoteAdminSetting!Enabled  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51042" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51041"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51042"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\FileAndPrint!Enabled  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51051" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51051"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\FileAndPrint!Enabled  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51052" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51051"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51052"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowRedirect is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:51060" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51060"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowInboundEchoRequest is set to 1" id="oval:gov.nist.USGCB.xpfirewall:tst:51061" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51061"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51061"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowInboundMaskRequest is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:51062" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51062"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowInboundRouterRequest is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:51063" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51063"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowInboundTimestampRequest is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:51064" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51064"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundDestinationUnreachable is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:51065" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51065"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundPacketTooBig is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:51066" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51066"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundParameterProblem is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:51067" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51067"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundSourceQuench is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:51068" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51068"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings!AllowOutboundTimeExceeded is set to 0" id="oval:gov.nist.USGCB.xpfirewall:tst:51069" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51069"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51062"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\RemoteDesktop!Enabled  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51071" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51071"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\RemoteDesktop!Enabled  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51072" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51071"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51072"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\UPnPFramework!Enabled  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51081" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51081"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\UPnPFrameworkt!Enabled  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51082" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51081"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51082"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DisableNotifications  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51091" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51091"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DisableNotifications  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51092" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51091"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51092"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DisableUnicastResponsesToMulticastBroadcast  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51111" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51111"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile!DisableUnicastResponsesToMulticastBroadcast  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51112" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51111"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51112"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\GloballyOpenPorts!AllowUserPrefMerge  exists" id="oval:gov.nist.USGCB.xpfirewall:tst:51131" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51131"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="all" check_existence="at_least_one_exists" comment="SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\GloballyOpenPorts!AllowUserPrefMerge  is set to the variable defined in the profile" id="oval:gov.nist.USGCB.xpfirewall:tst:51132" version="1">
            <object object_ref="oval:gov.nist.USGCB.xpfirewall:obj:51131"/>
            <state state_ref="oval:gov.nist.USGCB.xpfirewall:ste:51132"/>
        </registry_test>
    </tests>
    <!-- ==================================================================================================== -->
    <!-- ============================================  OBJECTS  ============================================= -->
    <!-- ==================================================================================================== -->
    <objects>
        <family_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" comment="This is the default family object. Only one family object should exist." id="oval:org.mitre.oval:obj:99" version="1"/>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" comment="This registry key holds the service pack installed on the host if one is present." id="oval:org.mitre.oval:obj:717" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Microsoft\Windows NT\CurrentVersion</key>
            <name>CSDVersion</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" comment="This registry key identifies the Windows ProductName" id="oval:org.mitre.oval:obj:5590" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Microsoft\Windows NT\CurrentVersion</key>
            <name>ProductName</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50001" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile</key>
            <name>EnableFirewall</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50031" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\AuthorizedApplications</key>
            <name>AllowUserPrefMerge</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50041" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\RemoteAdminSettings</key>
            <name>Enabled</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50051" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\FileAndPrint</key>
            <name>Enabled</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50060" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowRedirect</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50061" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowInboundEchoRequest</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50062" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowInboundMaskRequest</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50063" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowInboundRouterRequest</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50064" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowInboundTimestampRequest</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50065" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowOutboundDestinationUnreachable</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50066" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowOutboundPacketTooBig</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50067" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowOutboundParameterProblem</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50068" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowOutboundSourceQuench</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50069" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\IcmpSettings</key>
            <name>AllowOutboundTimeExceeded</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50071" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\RemoteDesktop</key>
            <name>Enabled</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50081" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Services\UPnPFramework</key>
            <name>Enabled</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50085" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\GloballyOpenPorts</key>
            <name>Enabled</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50091" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile</key>
            <name>DisableNotifications</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50111" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile</key>
            <name>DisableUnicastResponsesToMulticastBroadcast</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50131" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\GloballyOpenPorts</key>
            <name>AllowUserPrefMerge</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50141" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging</key>
            <name>LogDroppedPackets</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50151" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging</key>
            <name>LogSuccessfulConnections</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50161" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging</key>
            <name>LogFileSize</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:50171" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\DomainProfile\Logging</key>
            <name>LogFilePath</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51001" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile</key>
            <name>EnableFirewall</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51011" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile</key>
            <name>DoNotAllowExceptions</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51031" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\AuthorizedApplications</key>
            <name>AllowUserPrefMerge</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51041" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\RemoteAdminSettings</key>
            <name>Enabled</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51051" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\FileAndPrint</key>
            <name>Enabled</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51060" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowRedirect</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51061" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowInboundEchoRequest</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51062" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowInboundMaskRequest</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51063" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowInboundRouterRequest</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51064" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowInboundTimestampRequest</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51065" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowOutboundDestinationUnreachable</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51066" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowOutboundPacketTooBig</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51067" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowOutboundParameterProblem</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51068" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowOutboundSourceQuench</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51069" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\IcmpSettings</key>
            <name>AllowOutboundTimeExceeded</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51071" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\RemoteDesktop</key>
            <name>Enabled</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51081" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\Services\UPnPFramework</key>
            <name>Enabled</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51091" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile</key>
            <name>DisableNotifications</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51111" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile</key>
            <name>DisableUnicastResponsesToMulticastBroadcast</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:obj:51131" version="1">
            <hive>HKEY_LOCAL_MACHINE</hive>
            <key>SOFTWARE\Policies\Microsoft\WindowsFirewall\StandardProfile\GloballyOpenPorts</key>
            <name>AllowUserPrefMerge</name>
        </registry_object>
    </objects>
    <!-- ==================================================================================================== -->
    <!-- =============================================  STATES  ============================================= -->
    <!-- ==================================================================================================== -->
    <states>
        <family_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" comment="Microsoft Windows family" id="oval:org.mitre.oval:ste:99" version="1">
            <family>windows</family>
        </family_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" comment="Regex that matches Service Pack 2 or later" id="oval:org.mitre.oval:ste:2656" version="1">
            <value operation="pattern match">^Service Pack [2-9]|\d{2,}$</value>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" comment="The registry key matches with Windows XP" id="oval:org.mitre.oval:ste:5477" version="4">
            <value operation="pattern match">^[a-zA-Z0-9\(\)\s]*[Ww][Ii][Nn][Dd][Oo][Ww][Ss] [Xx][Pp][a-zA-Z0-9\(\)\s]*$</value>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50002" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50001"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50032" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50031"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50042" version="2">
            <type>reg_dword</type>
            <value datatype="string" operation="pattern match" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50041"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50052" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50051"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50061" version="2">
            <type>reg_dword</type>
            <value datatype="string" operation="pattern match">^(1|0)$</value>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50062" version="1">
            <type>reg_dword</type>
            <value datatype="int">0</value>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50072" version="2">
            <type>reg_dword</type>
            <value datatype="string" operation="pattern match" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50071"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50082" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50081"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50092" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50091"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50112" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50111"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50132" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50131"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50142" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50141"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50152" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50151"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50162" version="1">
            <type>reg_dword</type>
            <value datatype="int" operation="greater than or equal" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50161"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:50172" version="3">
            <type>reg_sz</type>
            <value datatype="string" operation="case insensitive equals" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:50171"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51002" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51001"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51012" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51011"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51032" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51031"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51042" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51041"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51052" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51051"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51061" version="1">
            <type>reg_dword</type>
            <value datatype="int">0</value>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51062" version="1">
            <type>reg_dword</type>
            <value datatype="int">0</value>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51072" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51071"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51082" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51081"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51092" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51091"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51112" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51111"/>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" id="oval:gov.nist.USGCB.xpfirewall:ste:51132" version="1">
            <type>reg_dword</type>
            <value datatype="int" var_check="all" var_ref="oval:gov.nist.USGCB.xpfirewall:var:51131"/>
        </registry_state>
    </states>
    <!-- ==================================================================================================== -->
    <!-- ============================================  VARIABLES  ============================================ -->
    <!-- ==================================================================================================== -->
    <variables>
        <external_variable comment="Protect all Network Connections - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50001" version="1"/>
        <external_variable comment="Allow local program exceptions - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50031" version="1"/>
        <external_variable comment="Allow remote administration exceptions - Domain Profile" datatype="string" id="oval:gov.nist.USGCB.xpfirewall:var:50041" version="2"/>
        <external_variable comment="Allow file and print sharing exception - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50051" version="1"/>
        <external_variable comment="Allow Remote Desktop exception - Domain Profile" datatype="string" id="oval:gov.nist.USGCB.xpfirewall:var:50071" version="2"/>
        <external_variable comment="Allow UPnP framework exception - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50081" version="1"/>
        <external_variable comment="Prohibit notification - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50091" version="1"/>
        <external_variable comment="Prohibit unicast response to multicast or broadcast requests - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50111" version="1"/>
        <external_variable comment="Allow local port exceptions - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50131" version="1"/>
        <external_variable comment="Allow Logging: Log Dropped Packets - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50141" version="1"/>
        <external_variable comment="Allow Logging: Log Successful Connections - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50151" version="1"/>
        <external_variable comment="Allow Logging: Log File Size - Domain Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:50161" version="1"/>
        <external_variable comment="Allow Logging: Log File Path - Domain Profile" datatype="string" id="oval:gov.nist.USGCB.xpfirewall:var:50171" version="1"/>
        <external_variable comment="Protect all Network Connections - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51001" version="1"/>
        <external_variable comment="Do not allow exceptions - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51011" version="1"/>
        <external_variable comment="Allow local program exceptions - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51031" version="1"/>
        <external_variable comment="Allow remote administration exceptions - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51041" version="1"/>
        <external_variable comment="Allow file and print sharing exception - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51051" version="1"/>
        <external_variable comment="Allow Remote Desktop exception - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51071" version="1"/>
        <external_variable comment="Allow UPnP framework exception - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51081" version="1"/>
        <external_variable comment="Prohibit notification - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51091" version="1"/>
        <external_variable comment="Prohibit unicast response to multicast or broadcast requests - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51111" version="1"/>
        <external_variable comment="Allow local port exceptions - Standard Profile" datatype="int" id="oval:gov.nist.USGCB.xpfirewall:var:51131" version="1"/>
    </variables>
    <!-- ==================================================================================================== -->
    <!-- ==================================================================================================== -->
    <!-- ==================================================================================================== -->
</oval_definitions>
  </component>
  <component id="scap_gov.nist_comp_USGCB-Windows-XP-firewall-cpe-oval.xml" timestamp="2012-02-24T10:00:00">
    <oval_definitions xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:ind-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5" xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5" xmlns:win-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" xsi:schemaLocation="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows http://oval.mitre.org/language/download/schema/version5.4/ovaldefinition/complete/windows-definitions-schema.xsd                   http://oval.mitre.org/XMLSchema/oval-definitions-5#independent http://oval.mitre.org/language/download/schema/version5.4/ovaldefinition/complete/independent-definitions-schema.xsd                   http://oval.mitre.org/XMLSchema/oval-definitions-5 http://oval.mitre.org/language/download/schema/version5.4/ovaldefinition/complete/oval-definitions-schema.xsd                   http://oval.mitre.org/XMLSchema/oval-common-5 http://oval.mitre.org/language/download/schema/version5.4/ovaldefinition/complete/oval-common-schema.xsd">
      <generator>
        <oval:product_name>National Institute of Standards and Technology</oval:product_name>
        <oval:schema_version>5.4</oval:schema_version>
        <oval:timestamp>2012-02-24T10:00:00.000-04:00</oval:timestamp>
      </generator>
      <!-- ==================================================================================================== -->
      <!-- ==========================================  DEFINITIONS  =========================================== -->
      <!-- ==================================================================================================== -->
      <definitions>
        <definition class="inventory" id="oval:org.mitre.oval:def:521" version="5">
          <metadata>
            <title>Microsoft Windows XP SP2 or later is installed</title>
            <affected family="windows">
              <platform>Microsoft Windows XP</platform>
            </affected>
            <description>The operating system installed on the system is Microsoft Windows XP SP2 or later</description>
            <oval_repository>
              <dates>
                <submitted date="2006-07-25T12:05:33">
                  <contributor organization="ThreatGuard, Inc.">Robert L. Hollis</contributor>
                </submitted>
                <status_change date="2006-07-27T20:15:00.000-04:00">DRAFT</status_change>
                <status_change date="2006-09-27T12:29:29.930-04:00">INTERIM</status_change>
                <status_change date="2006-10-16T15:58:43.496-04:00">ACCEPTED</status_change>
                <modified comment="Added CPE reference." date="2007-04-30T07:48:00.073-04:00">
                  <contributor organization="The MITRE Corporation">Jonathan Baker</contributor>
                </modified>
                <status_change date="2007-04-30T08:00:54.097-04:00">INTERIM</status_change>
                <status_change date="2007-05-23T15:05:48.210-04:00">ACCEPTED</status_change>
                <modified comment="Changed the CPE reference" date="2008-04-04T11:17:00.488-04:00">
                  <contributor organization="The MITRE Corporation">Andrew Buttner</contributor>
                </modified>
                <status_change date="2008-04-04T11:27:40.511-04:00">INTERIM</status_change>
                <status_change date="2008-04-21T04:00:20.931-04:00">ACCEPTED</status_change>
                <modified comment="Removed Microsoft reference" date="2009-06-01T16:05:28.035-04:00">
                  <contributor organization="The MITRE Corporation">Brendan Miles</contributor>
                </modified>
                <status_change date="2009-06-08T04:00:40.693-04:00">INTERIM</status_change>
                <status_change date="2009-06-29T04:00:25.177-04:00">ACCEPTED</status_change>
                <modified comment="Removed the CPE reference, as references should only exist on definitions that check for a set version (not a range)" date="2010-01-13T14:38:00.684-05:00">
                  <contributor organization="The MITRE Corporation">Mike Lah</contributor>
                </modified>
                <status_change date="2010-01-13T14:40:10.691-05:00">INTERIM</status_change>
                <status_change date="2010-02-01T04:00:08.604-05:00">ACCEPTED</status_change>
              </dates>
              <status>ACCEPTED</status>
            </oval_repository>
          </metadata>
          <criteria operator="AND">
            <extend_definition comment="Microsoft Windows XP is installed" definition_ref="oval:org.mitre.oval:def:105"/>
            <criterion comment="Win2K/XP/2003 service pack 2 (or later) is installed" test_ref="oval:org.mitre.oval:tst:2837"/>
          </criteria>
        </definition>
        <definition class="inventory" id="oval:org.mitre.oval:def:105" version="5">
          <metadata>
            <title>Microsoft Windows XP is installed</title>
            <affected family="windows">
              <platform>Microsoft Windows XP</platform>
            </affected>
            <reference ref_id="cpe:/o:microsoft:windows_xp" source="CPE"/>
            <description>The operating system installed on the system is Microsoft Windows XP.</description>
            <oval_repository>
              <dates>
                <submitted date="2006-06-26T12:55:00.000-04:00">
                  <contributor organization="The MITRE Corporation">Andrew Buttner</contributor>
                </submitted>
                <status_change date="2006-06-26T12:55:00.000-04:00">ACCEPTED</status_change>
                <modified comment="Added CPE reference." date="2007-04-30T07:48:00.244-04:00">
                  <contributor organization="The MITRE Corporation">Jonathan Baker</contributor>
                </modified>
                <status_change date="2007-04-30T08:01:55.267-04:00">INTERIM</status_change>
                <status_change date="2007-05-23T15:05:25.969-04:00">ACCEPTED</status_change>
                <modified comment="Changed the CPE reference" date="2008-04-04T11:17:00.073-04:00">
                  <contributor organization="The MITRE Corporation">Andrew Buttner</contributor>
                </modified>
                <status_change date="2008-04-04T11:27:52.098-04:00">INTERIM</status_change>
                <status_change date="2008-04-21T04:00:10.499-04:00">ACCEPTED</status_change>
                <modified comment="Changed the test for windows to be case insensitive and replaced the test for Windows 5.1 with a new test for Windows XP" date="2009-12-02T16:05:00.749-04:00">
                  <contributor organization="National Institute of Standards and Technology">Tim Harrison</contributor>
                </modified>
                <status_change date="2009-12-02T16:05:00.749-04:00">INTERIM</status_change>
                <modified comment="Added anchors and spaces to regular expression" date="2009-12-04T14:56:00.359-05:00">
                  <contributor organization="National Institute of Standards and Technology">Tim Harrison</contributor>
                </modified>
                <modified comment="Updating regex to include parenthesis" date="2009-12-08T17:32:00.792-05:00">
                  <contributor organization="National Institute of Standards and Technology">Tim Harrison</contributor>
                </modified>
                <status_change date="2010-01-04T04:01:15.920-05:00">ACCEPTED</status_change>
              </dates>
              <status>ACCEPTED</status>
            </oval_repository>
          </metadata>
          <criteria operator="AND">
            <criterion comment="the installed operating system is part of the Microsoft Windows family" test_ref="oval:org.mitre.oval:tst:99"/>
            <criterion comment="Windows XP is installed" test_ref="oval:org.mitre.oval:tst:11179"/>
              <criterion comment="Service pack 2 (or later) is installed" test_ref="oval:org.mitre.oval:tst:2837"/>
          </criteria>
        </definition>
      </definitions>
      <!-- ==================================================================================================== -->
      <!-- ============================================  TESTS  =============================================== -->
      <!-- ==================================================================================================== -->
      <tests>
        <family_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" check="only one" check_existence="at_least_one_exists" comment="the installed operating system is part of the Microsoft Windows family" id="oval:org.mitre.oval:tst:99" version="1">
          <object object_ref="oval:org.mitre.oval:obj:99"/>
          <state state_ref="oval:org.mitre.oval:ste:99"/>
        </family_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="at least one" check_existence="at_least_one_exists" comment="Windows XP is installed" id="oval:org.mitre.oval:tst:11179" version="3">
          <object object_ref="oval:org.mitre.oval:obj:5590"/>
          <state state_ref="oval:org.mitre.oval:ste:5477"/>
        </registry_test>
        <registry_test xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" check="at least one" check_existence="at_least_one_exists" comment="Win2K/XP/2003 service pack 2 (or later) is installed" id="oval:org.mitre.oval:tst:2837" version="1">
          <object object_ref="oval:org.mitre.oval:obj:717"/>
          <state state_ref="oval:org.mitre.oval:ste:2656"/>
        </registry_test>
      </tests>
      <!-- ==================================================================================================== -->
      <!-- ===========================================  OBJECTS  ============================================== -->
      <!-- ==================================================================================================== -->
      <objects>
        <family_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" comment="This is the default family object. Only one family object should exist." id="oval:org.mitre.oval:obj:99" version="1"/>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" comment="This registry key identifies the Windows ProductName" id="oval:org.mitre.oval:obj:5590" version="1">
          <hive>HKEY_LOCAL_MACHINE</hive>
          <key>SOFTWARE\Microsoft\Windows NT\CurrentVersion</key>
          <name>ProductName</name>
        </registry_object>
        <registry_object xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" comment="This registry key holds the service pack installed on the host if one is present." id="oval:org.mitre.oval:obj:717" version="1">
          <hive>HKEY_LOCAL_MACHINE</hive>
          <key>SOFTWARE\Microsoft\Windows NT\CurrentVersion</key>
          <name>CSDVersion</name>
        </registry_object>
      </objects>
      <!-- ==================================================================================================== -->
      <!-- =============================================  STATES  ============================================= -->
      <!-- ==================================================================================================== -->
      <states>
        <family_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#independent" comment="Microsoft Windows family" id="oval:org.mitre.oval:ste:99" version="2">
          <family>windows</family>
        </family_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" comment="The registry key matches with Windows XP" id="oval:org.mitre.oval:ste:5477" version="4">
          <value operation="pattern match">^[a-zA-Z0-9\(\)\s]*[Ww][Ii][Nn][Dd][Oo][Ww][Ss] [Xx][Pp][a-zA-Z0-9\(\)\s]*$</value>
        </registry_state>
        <registry_state xmlns="http://oval.mitre.org/XMLSchema/oval-definitions-5#windows" comment="Regex that matches Service Pack 2 or later" id="oval:org.mitre.oval:ste:2656" version="1">
          <value operation="pattern match">^Service Pack [2-9]|\d{2,}$</value>
        </registry_state>
      </states>
      <!-- ==================================================================================================== -->
      <!-- ==================================================================================================== -->
      <!-- ==================================================================================================== -->
    </oval_definitions>
  </component>
  <component id="scap_gov.nist_comp_USGCB-Windows-XP-firewall-cpe-dictionary.xml" timestamp="2012-02-24T10:00:00">
    <cpe-list xmlns="http://cpe.mitre.org/dictionary/2.0" xsi:schemaLocation="http://cpe.mitre.org/dictionary/2.0 http://scap.nist.gov/schema/cpe/2.3/cpe-dictionary_2.3.xsd">
      <cpe-item name="cpe:/o:microsoft:windows_xp">
        <title>Microsoft Windows XP Service Pack 2 or later</title>
        <check href="USGCB-Windows-XP-firewall-cpe-oval.xml" system="http://oval.mitre.org/XMLSchema/oval-definitions-5">oval:org.mitre.oval:def:521</check>
      </cpe-item>
    </cpe-list>
  </component>
<Signature xmlns="http://www.w3.org/2000/09/xmldsig#" Id="dsig-20121128145111689-67"><SignedInfo><CanonicalizationMethod Algorithm="http://www.w3.org/2006/12/xml-c14n11"/><SignatureMethod Algorithm="http://www.w3.org/2001/04/xmldsig-more#rsa-sha256"/><Reference URI="#scap_gov.nist_datastream_USGCB-Windows-XP-firewall-2.0.3.1.zip"><Transforms><Transform Algorithm="http://www.w3.org/2006/12/xml-c14n11"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/><DigestValue>gDBEKY4l/6Pb5ySoKpthzj/7tOZJ1ustNmGrEJLgtZE=</DigestValue></Reference><Reference Type="http://www.w3.org/2000/09/xmldsig#SignatureProperties" URI="#sig-props-20121128145111697-77"><Transforms><Transform Algorithm="http://www.w3.org/2006/12/xml-c14n11"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha512"/><DigestValue>oz05G6ySKiSnj3F8rd1CvdMK6XsLJTpKN1k3lGn71ImrZYCFRIIIm4dlRnVUWCNnl189l88prZHT
UBQx81YBDw==</DigestValue></Reference><Reference Type="http://www.w3.org/2000/09/xmldsig#Manifest" URI="#manifest-20121128145111688-5"><Transforms><Transform Algorithm="http://www.w3.org/2006/12/xml-c14n11"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/><DigestValue>NO00gBZTD8NsenzAsOq0IkETHEw6Fh6DivgGa16BH+M=</DigestValue></Reference></SignedInfo><SignatureValue>I70Qv2TX+PNESUwPCQOwCRE97vbolR/sxrV3sEnWt6dussS1g2Zw6pWq/LhQYk9cgJ88ZYbN0lWv
t5aB5/LaZYXJDE1O0GH4526nL8eGc7m3puoprfCTnQINa3Acd1BdVpESbRyZF8DjNTXfSQEg9RPZ
N8wLvpKyg39vTA5bpmR7in3+aRjvCDYf9+2nSjAx2D6xIX3MeGTS1/6GXmrTSdvveEFwyduXcjoI
gh1S1Y/7Od7TgvkfCNuUbQCQr6nB8ia1E2lf/gC8cBxx8hTzGI2rHcqxi9xGoxo+Tspq9DVmEBo9
sNDl6bx+tAhk0t1HV+lPWQlGExD+HlTw/r4wDw==</SignatureValue><KeyInfo><KeyValue><RSAKeyValue><Modulus>udiDDDUEIO4YVgWVXvrs9l/1WuTEiEx0vMnef7X6fAY6WIUkK4Q0s7iy9WdyNPI7m6qdPh+mUl+y
b74j874EIxY+VEz6nATjeBO3F74Se/4kfTe5e+jqauPJ9tpJ8+pjEDkRXmgVr05lQeH/CBQl0xMu
3kfowA2HtBI9f2AY8w5lbeL3NXQVVdfe4GOy5MBfc1uHmu8eFM57R4p9Z3O8CJ1OdTyhxjhqgwGy
0Eb4OhnvqFDMyBL0cnGya9nZv8s8gnm4QL3aWxTRo4gTOmgCT+50ET49NK50j6hk98Fpf3tDapCM
JQWh73Pu2G845AuS2HRn8pPyTQ0Br+l85FX0ew==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue></KeyValue><X509Data><X509SubjectName>CN=SECURITY AUTOMATION PROGRAM MANAGER,OU=Devices,OU=National Institute of Standards and Technology,OU=Department of Commerce,O=U.S. Government,C=US</X509SubjectName><X509SKI>BBYEFF7dAd5QMljpKnYAvebD/oHjX6jw</X509SKI><X509IssuerSerial><X509IssuerName>OU=Entrust Managed Services SSP CA,OU=Certification Authorities,O=Entrust,C=US</X509IssuerName><X509SerialNumber>1149213983</X509SerialNumber></X509IssuerSerial><X509Certificate>MIIHeTCCBmGgAwIBAgIESQWU5DANBgkqhkiG9w0BAQsFADBtMQswCQYDVQQGEwJVUzEQMA4GA1UE
ChMHRW50cnVzdDEiMCAGA1UECxMZQ2VydGlmaWNhdGlvbiBBdXRob3JpdGllczEoMCYGA1UECxMf
RW50cnVzdCBNYW5hZ2VkIFNlcnZpY2VzIFNTUCBDQTAeFw0xMjA0MTAxNTUyNTRaFw0xNTA0MTAx
NjIyNTRaMIHBMQswCQYDVQQGEwJVUzEYMBYGA1UEChMPVS5TLiBHb3Zlcm5tZW50MR8wHQYDVQQL
ExZEZXBhcnRtZW50IG9mIENvbW1lcmNlMTcwNQYDVQQLEy5OYXRpb25hbCBJbnN0aXR1dGUgb2Yg
U3RhbmRhcmRzIGFuZCBUZWNobm9sb2d5MRAwDgYDVQQLEwdEZXZpY2VzMSwwKgYDVQQDEyNTRUNV
UklUWSBBVVRPTUFUSU9OIFBST0dSQU0gTUFOQUdFUjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCC
AQoCggEBALnYgww1BCDuGFYFlV767PZf9VrkxIhMdLzJ3n+1+nwGOliFJCuENLO4svVncjTyO5uq
nT4fplJfsm++I/O+BCMWPlRM+pwE43gTtxe+Env+JH03uXvo6mrjyfbaSfPqYxA5EV5oFa9OZUHh
/wgUJdMTLt5H6MANh7QSPX9gGPMOZW3i9zV0FVXX3uBjsuTAX3Nbh5rvHhTOe0eKfWdzvAidTnU8
ocY4aoMBstBG+DoZ76hQzMgS9HJxsmvZ2b/LPIJ5uEC92lsU0aOIEzpoAk/udBE+PTSudI+oZPfB
aX97Q2qQjCUFoe9z7thvOOQLkth0Z/KT8k0NAa/pfORV9HsCAwEAAaOCA8owggPGMA4GA1UdDwEB
/wQEAwIGwDAXBgNVHSAEEDAOMAwGCmCGSAFlAwIBAwcwggFeBggrBgEFBQcBAQSCAVAwggFMMIG4
BggrBgEFBQcwAoaBq2xkYXA6Ly9zc3BkaXIubWFuYWdlZC5lbnRydXN0LmNvbS9vdT1FbnRydXN0
JTIwTWFuYWdlZCUyMFNlcnZpY2VzJTIwU1NQJTIwQ0Esb3U9Q2VydGlmaWNhdGlvbiUyMEF1dGhv
cml0aWVzLG89RW50cnVzdCxjPVVTP2NBQ2VydGlmaWNhdGU7YmluYXJ5LGNyb3NzQ2VydGlmaWNh
dGVQYWlyO2JpbmFyeTBLBggrBgEFBQcwAoY/aHR0cDovL3NzcHdlYi5tYW5hZ2VkLmVudHJ1c3Qu
Y29tL0FJQS9DZXJ0c0lzc3VlZFRvRU1TU1NQQ0EucDdjMEIGCCsGAQUFBzABhjZodHRwOi8vb2Nz
cC5tYW5hZ2VkLmVudHJ1c3QuY29tL09DU1AvRU1TU1NQQ0FSZXNwb25kZXIwGwYDVR0JBBQwEjAQ
BgkqhkiG9n0HRB0xAwIBIDCCAYcGA1UdHwSCAX4wggF6MIHqoIHnoIHkhoGrbGRhcDovL3NzcGRp
ci5tYW5hZ2VkLmVudHJ1c3QuY29tL2NuPVdpbkNvbWJpbmVkMSxvdT1FbnRydXN0JTIwTWFuYWdl
ZCUyMFNlcnZpY2VzJTIwU1NQJTIwQ0Esb3U9Q2VydGlmaWNhdGlvbiUyMEF1dGhvcml0aWVzLG89
RW50cnVzdCxjPVVTP2NlcnRpZmljYXRlUmV2b2NhdGlvbkxpc3Q7YmluYXJ5hjRodHRwOi8vc3Nw
d2ViLm1hbmFnZWQuZW50cnVzdC5jb20vQ1JMcy9FTVNTU1BDQTEuY3JsMIGKoIGHoIGEpIGBMH8x
CzAJBgNVBAYTAlVTMRAwDgYDVQQKEwdFbnRydXN0MSIwIAYDVQQLExlDZXJ0aWZpY2F0aW9uIEF1
dGhvcml0aWVzMSgwJgYDVQQLEx9FbnRydXN0IE1hbmFnZWQgU2VydmljZXMgU1NQIENBMRAwDgYD
VQQDEwdDUkw0MDMzMCsGA1UdEAQkMCKADzIwMTIwNDEwMTU1MjU0WoEPMjAxNDA1MTcwNDIyNTRa
MB8GA1UdIwQYMBaAFNPO51uJp81skcZnNqlYcgns4jnzMB0GA1UdDgQWBBRe3QHeUDJY6Sp2AL3m
w/6B41+o8DAJBgNVHRMEAjAAMBkGCSqGSIb2fQdBAAQMMAobBFY4LjADAgSwMA0GCSqGSIb3DQEB
CwUAA4IBAQCbR3AvwbMLsTCH7G1FN5ADekjx0S4hKoskNE14AT4ijX/TuEPgMfRCeFyMQ3jZdxgW
6+TVjd+8SBOHHUaseE5F0WKYeiK32mrTlX3WIzGnvPKpEmnbxLqAQZeKGU8qQr99om1JD24/kgy/
aEPQCpMya3u+yeSvmJDILkLPliiPSZM5YxBUwjFwZfp44rFjN3ksckWDQDqDqLijgg/Hhzy9YaEE
uy9ltx8yBje2Ca2CdpZqtocTUx+/SN2Q0HhbZ2aSlG8DCZcNn3/CzmuTSBkeSjt+iqdRW50/7p2z
r1452HqqnVo8pSa4WkHdM2dkmlzvsgLSRP75dSRXOrXxEvNN</X509Certificate></X509Data><X509Data><X509SubjectName>OU=Entrust Managed Services SSP CA,OU=Certification Authorities,O=Entrust,C=US</X509SubjectName><X509SKI>BBYEFNPO51uJp81skcZnNqlYcgns4jnz</X509SKI><X509IssuerSerial><X509IssuerName>OU=Entrust Managed Services Root CA,OU=Certification Authorities,O=Entrust,C=US</X509IssuerName><X509SerialNumber>514</X509SerialNumber></X509IssuerSerial><X509Certificate>MIIHBDCCBeygAwIBAgIERH+dHzANBgkqhkiG9w0BAQUFADBuMQswCQYDVQQGEwJVUzEQMA4GA1UE
ChMHRW50cnVzdDEiMCAGA1UECxMZQ2VydGlmaWNhdGlvbiBBdXRob3JpdGllczEpMCcGA1UECxMg
RW50cnVzdCBNYW5hZ2VkIFNlcnZpY2VzIFJvb3QgQ0EwHhcNMDkwNTA5MTUzMjA2WhcNMTkwNTA5
MTQwMjMxWjBtMQswCQYDVQQGEwJVUzEQMA4GA1UEChMHRW50cnVzdDEiMCAGA1UECxMZQ2VydGlm
aWNhdGlvbiBBdXRob3JpdGllczEoMCYGA1UECxMfRW50cnVzdCBNYW5hZ2VkIFNlcnZpY2VzIFNT
UCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAL4Y6xZWI7Bkvhi+89HwIW5REGez
eZthIq5dJoUYkrwDlbFBXZTxn9E4PnPEmZcznpNE5ru20jXFRBzsFOlkNKCFH1NborQoC8WDnc42
qCNzHXRBS0mJYxivkRH6abt1m7QvpVXNOrtLgVAAwyu748m+IBP7uPUlHqGyAV0ePih/z+AeYmuZ
YxZtAoev6HKohyW2e9ZR2bXqWp6tcM0HF+czsWGAVPZ1h3hVU+CNCvudPTYCnI2BrT7t6b1pYG5j
c8UO1dnABKvNPvERNgi4HSoTMMhzvHFVT9WXDp4endEoXjc0pzsEjV4J0pJz11Sck0TQ+IAroDw3
PzfTGOgzg10CAwEAAaOCA6kwggOlMA4GA1UdDwEB/wQEAwIBBjBPBgNVHSAESDBGMAwGCmCGSAFl
AwIBAwYwDAYKYIZIAWUDAgEDBzAMBgpghkgBZQMCAQMIMAwGCmCGSAFlAwIBAw0wDAYKYIZIAWUD
AgEDETAPBgNVHRMBAf8EBTADAQH/MIIBYwYIKwYBBQUHAQEEggFVMIIBUTCBugYIKwYBBQUHMAKG
ga1sZGFwOi8vcm9vdGRpci5tYW5hZ2VkLmVudHJ1c3QuY29tL291PUVudHJ1c3QlMjBNYW5hZ2Vk
JTIwU2VydmljZXMlMjBSb290JTIwQ0Esb3U9Q2VydGlmaWNhdGlvbiUyMEF1dGhvcml0aWVzLG89
RW50cnVzdCxjPVVTP2NBQ2VydGlmaWNhdGU7YmluYXJ5LGNyb3NzQ2VydGlmaWNhdGVQYWlyO2Jp
bmFyeTBNBggrBgEFBQcwAoZBaHR0cDovL3Jvb3R3ZWIubWFuYWdlZC5lbnRydXN0LmNvbS9TSUEv
Q2VydHNJc3N1ZWRUb0VNU1Jvb3RDQS5wN2MwQwYIKwYBBQUHMAGGN2h0dHA6Ly9vY3NwLm1hbmFn
ZWQuZW50cnVzdC5jb20vT0NTUC9FTVNSb290Q0FSZXNwb25kZXIwggGIBgNVHR8EggF/MIIBezCB
7qCB66CB6IaBrWxkYXA6Ly9yb290ZGlyLm1hbmFnZWQuZW50cnVzdC5jb20vY249V2luQ29tYmlu
ZWQxLG91PUVudHJ1c3QlMjBNYW5hZ2VkJTIwU2VydmljZXMlMjBSb290JTIwQ0Esb3U9Q2VydGlm
aWNhdGlvbiUyMEF1dGhvcml0aWVzLG89RW50cnVzdCxjPVVTP2NlcnRpZmljYXRlUmV2b2NhdGlv
bkxpc3Q7YmluYXJ5hjZodHRwOi8vcm9vdHdlYi5tYW5hZ2VkLmVudHJ1c3QuY29tL0NSTHMvRU1T
Um9vdENBMS5jcmwwgYeggYSggYGkfzB9MQswCQYDVQQGEwJVUzEQMA4GA1UEChMHRW50cnVzdDEi
MCAGA1UECxMZQ2VydGlmaWNhdGlvbiBBdXRob3JpdGllczEpMCcGA1UECxMgRW50cnVzdCBNYW5h
Z2VkIFNlcnZpY2VzIFJvb3QgQ0ExDTALBgNVBAMTBENSTDEwHwYDVR0jBBgwFoAUnGJmJp1xtqd1
U2ThrLHHJTxEXQ0wHQYDVR0OBBYEFNPO51uJp81skcZnNqlYcgns4jnzMA0GCSqGSIb3DQEBBQUA
A4IBAQB1efbjA0HgDMfS7KKmEWnOC5SzYg68tipgd0NXEpsjXLYlJny2JJ0ROZfTWfQwvnYKBita
pDFD8SIxJVd5dNnyo+tYhsQec3u6PfgQlBM8lTaJtmKbV1Rf0Iqg+LCFMGno04hf2y6nhKMiDmuR
k2BZmP6CBF5Z+2hY1VKcEllTk5klXJcpRZIAMaYAILfC+4w7lYy3E+g7QODA0TSYp0AT/uDZwRrD
FbUj2Hzpe/DlrQd1QbU9gOpMz4+XV1BIghkJ9o8n5IL4htk8i1rfaN0JFEiz/FKSsnpPpFmL+7z5
QPR3NAumcSfkae8ZK+tNTIAIXf1W3wFfUpcNigYJlKgj</X509Certificate></X509Data><X509Data><X509SubjectName>OU=Entrust Managed Services Root CA,OU=Certification Authorities,O=Entrust,C=US</X509SubjectName><X509SKI>BBYEFJxiZiadcbandVNk4ayxxyU8RF0N</X509SKI><X509IssuerSerial><X509IssuerName>CN=Federal Common Policy CA,OU=FPKI,O=U.S. Government,C=US</X509IssuerName><X509SerialNumber>340851109174907066384510</X509SerialNumber></X509IssuerSerial><X509Certificate>MIIGxDCCBaygAwIBAgICAgIwDQYJKoZIhvcNAQELBQAwWTELMAkGA1UEBhMCVVMxGDAWBgNVBAoT
D1UuUy4gR292ZXJubWVudDENMAsGA1UECxMERlBLSTEhMB8GA1UEAxMYRmVkZXJhbCBDb21tb24g
UG9saWN5IENBMB4XDTEwMTIxNTIxMTIyNloXDTIwMTIxNTIxMTAyN1owbjELMAkGA1UEBhMCVVMx
EDAOBgNVBAoTB0VudHJ1c3QxIjAgBgNVBAsTGUNlcnRpZmljYXRpb24gQXV0aG9yaXRpZXMxKTAn
BgNVBAsTIEVudHJ1c3QgTWFuYWdlZCBTZXJ2aWNlcyBSb290IENBMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEAtntz0/7RJGVXZa6iSqs5aLys+CNBBpw/+O5oROQ7rSI4tnz2WPxiqPaC
1ddAvKRWcb2+aUvYMJfRkdpss9xBH6nRZ5l/lwkQzfgTsOQtKlFv+rT2KVdUFXRikp/CAUDkVyiC
7iPvi8kHgNK4aYgUbfGwxmwrS77n9csB3Nv5a1jjpMJQM8CXdeQ+nZ2wUtiMIMMHJRVwrTn/259O
dafLj//GO/rJolAM7E4PNm0O6Ydx06hzHkyxBj3jQa1dwrdxFzvIkwodVA9yVX/i0FVs8veomMZu
FiBPsS+eH4ixACr4t/kQk2llA6cpWChrKru8vXNHfJ/4O/NEiLVlKIC7pQIDAQABo4IDfzCCA3sw
DwYDVR0TAQH/BAUwAwEB/zBPBgNVHSAESDBGMAwGCmCGSAFlAwIBAwYwDAYKYIZIAWUDAgEDBzAM
BgpghkgBZQMCAQMIMAwGCmCGSAFlAwIBAw0wDAYKYIZIAWUDAgEDETCB6QYIKwYBBQUHAQEEgdww
gdkwPwYIKwYBBQUHMAKGM2h0dHA6Ly9odHRwLmZwa2kuZ292L2ZjcGNhL2NhQ2VydHNJc3N1ZWRU
b2ZjcGNhLnA3YzCBlQYIKwYBBQUHMAKGgYhsZGFwOi8vbGRhcC5mcGtpLmdvdi9jbj1GZWRlcmFs
JTIwQ29tbW9uJTIwUG9saWN5JTIwQ0Esb3U9RlBLSSxvPVUuUy4lMjBHb3Zlcm5tZW50LGM9VVM/
Y0FDZXJ0aWZpY2F0ZTtiaW5hcnksY3Jvc3NDZXJ0aWZpY2F0ZVBhaXI7YmluYXJ5MIIBHgYIKwYB
BQUHAQsEggEQMIIBDDBNBggrBgEFBQcwBYZBaHR0cDovL3Jvb3R3ZWIubWFuYWdlZC5lbnRydXN0
LmNvbS9TSUEvQ2VydHNJc3N1ZWRCeUVNU1Jvb3RDQS5wN2MwgboGCCsGAQUFBzAFhoGtbGRhcDov
L3Jvb3RkaXIubWFuYWdlZC5lbnRydXN0LmNvbS9vdT1FbnRydXN0JTIwTWFuYWdlZCUyMFNlcnZp
Y2VzJTIwUm9vdCUyMENBLG91PUNlcnRpZmljYXRpb24lMjBBdXRob3JpdGllcyxvPUVudHJ1c3Qs
Yz1VUz9jQUNlcnRpZmljYXRlO2JpbmFyeSxjcm9zc0NlcnRpZmljYXRlUGFpcjtiaW5hcnkwDgYD
VR0PAQH/BAQDAgEGMB8GA1UdIwQYMBaAFK0MenVc5fOYxHmYDqwo/Zf05wL8MIG4BgNVHR8EgbAw
ga0wKqAooCaGJGh0dHA6Ly9odHRwLmZwa2kuZ292L2ZjcGNhL2ZjcGNhLmNybDB/oH2ge4Z5bGRh
cDovL2xkYXAuZnBraS5nb3YvY24lM2RGZWRlcmFsJTIwQ29tbW9uJTIwUG9saWN5JTIwQ0Esb3Ul
M2RGUEtJLG8lM2RVLlMuJTIwR292ZXJubWVudCxjJTNkVVM/Y2VydGlmaWNhdGVSZXZvY2F0aW9u
TGlzdDAdBgNVHQ4EFgQUnGJmJp1xtqd1U2ThrLHHJTxEXQ0wDQYJKoZIhvcNAQELBQADggEBAF1V
nwRwXqw8cXL1cTi+ooEKDlFQJG6ABGpk9wQMMLZNCWY2SlgTubCLsdmDWss/bjwkDZ32X5/SFniT
YzOR/R/XQlCdVCrRNuEdTtB7z9GO7zVLusuc53T6yUz6btpK1Es5okLJP0txuwoMKBysSTJ7THum
muGaDkEOw5mdlygx0CgulNHrIViHsxDXIEsVpCDNMaMhSglO31oaS+gg+GOkFo6PmtOFlgLL4K6N
O9Ujr31SJqxVB9KWPf1s5QiP7/VKkU7YCRh7WbdI4Bmaw7KVTyTU5aScGLe927fayO1onZ/4yRy0
4q+7QJmbcZZvw2D33xJmXlq/UGje3aBmkxM=</X509Certificate></X509Data><X509Data><X509SubjectName>CN=Federal Common Policy CA,OU=FPKI,O=U.S. Government,C=US</X509SubjectName><X509SKI>BBYEFK0MenVc5fOYxHmYDqwo/Zf05wL8</X509SKI><X509IssuerSerial><X509IssuerName>CN=Common Policy,OU=FBCA,O=U.S. Government,C=us</X509IssuerName><X509SerialNumber>54780185447832661891327345497050931631</X509SerialNumber></X509IssuerSerial><X509Certificate>MIIHXjCCBkagAwIBAgIKSC2TXgABAAAAfjANBgkqhkiG9w0BAQUFADBOMQswCQYDVQQGEwJ1czEY
MBYGA1UEChMPVS5TLiBHb3Zlcm5tZW50MQ0wCwYDVQQLEwRGQkNBMRYwFAYDVQQDEw1Db21tb24g
UG9saWN5MB4XDTExMDIxMTE2Mzc0MFoXDTEzMTIzMTE2NDc0MFowWTELMAkGA1UEBhMCVVMxGDAW
BgNVBAoTD1UuUy4gR292ZXJubWVudDENMAsGA1UECxMERlBLSTEhMB8GA1UEAxMYRmVkZXJhbCBD
b21tb24gUG9saWN5IENBMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2HX7NRY0WkG/
Wq9cMAQUHK14RLXqJup1YcfNNnn4fNi9KVFmWSHjeavUeL6wLbCh1bI1FiPQzB6+Duir3MPJ1hLX
p3JoGDG4FyKyPn66CG3G/dFYLGmgA/Aqo/Y/ISU937cyxY4nsyOl4FKzXZbpsLjFxZ+7xaBugkC7
xScFNknWJidpDDSPzyd6KgqjQV+NHQOGgxXgVcHFmCye7Bpy3EjBPvmE0oSCwRvDdDa3ucc2Mnr4
MrbQNq4iGDGMUHMhnv6DOzCIJOPpwX7e7ZjHH5IQip9bYi+dpLzVhW86/clTpyBLqtsgqyFOHQ1O
5piF5asRR12dP8QjwOMUBm7+nQIDAQABo4IEMTCCBC0wDwYDVR0TAQH/BAUwAwEB/zALBgNVHQ8E
BAMCAYYwHQYDVR0OBBYEFK0MenVc5fOYxHmYDqwo/Zf05wL8MB8GA1UdIwQYMBaAFC9Yl9ipBZil
Vh/72at17wI8NjTHMIG5BgNVHR8EgbEwga4wgauggaiggaWGNWh0dHA6Ly9mcGtpYS5nc2EuZ292
L0NvbW1vblBvbGljeS9Db21tb25Qb2xpY3koMSkuY3JshmxsZGFwOi8vZnBraWEuZ3NhLmdvdi9j
bj1Db21tb24lMjBQb2xpY3koMSksb3U9RkJDQSxvPVUuUy4lMjBHb3Zlcm5tZW50LGM9VVM/Y2Vy
dGlmaWNhdGVSZXZvY2F0aW9uTGlzdDtiaW5hcnkwgdwGCCsGAQUFBwEBBIHPMIHMMEIGCCsGAQUF
BzAChjZodHRwOi8vZnBraWEuZ3NhLmdvdi9Db21tb25Qb2xpY3kvQ29tbW9uUG9saWN5Um9vdC5w
N2MwgYUGCCsGAQUFBzAChnlsZGFwOi8vZnBraWEuZ3NhLmdvdi9jbj1Db21tb24lMjBQb2xpY3ks
b3U9RkJDQSxvPVUuUy4lMjBHb3Zlcm5tZW50LGM9VVM/Y0FDZXJ0aWZpY2F0ZTtiaW5hcnksY3Jv
c3NDZXJ0aWZpY2F0ZVBhaXI7YmluYXJ5MB0GCSsGAQQBgjcUAgQQHg4AQwByAG8AcwBzAEMAQTCC
ASUGA1UdIASCARwwggEYMAwGCmCGSAFlAwIBAwYwDAYKYIZIAWUDAgEDBzAMBgpghkgBZQMCAQMI
MAwGCmCGSAFlAwIBAw0wDAYKYIZIAWUDAgEDEDAMBgpghkgBZQMCAQMRMAwGCmCGSAFlAwIBAwEw
DAYKYIZIAWUDAgEDAjAMBgpghkgBZQMCAQMOMAwGCmCGSAFlAwIBAw8wDAYKYIZIAWUDAgEDEjAM
BgpghkgBZQMCAQMUMAwGCmCGSAFlAwIBAxMwDAYKYIZIAWUDAgEDFTAMBgpghkgBZQMCAQMXMAwG
CmCGSAFlAwIBAxYwDAYKYIZIAWUDAgEDGDAMBgpghkgBZQMCAQMZMAwGCmCGSAFlAwIBAxowDAYK
YIZIAWUDAgEDGzCB6QYIKwYBBQUHAQsEgdwwgdkwgZUGCCsGAQUFBzAFhoGIbGRhcDovL2xkYXAu
ZnBraS5nb3YvY249RmVkZXJhbCUyMENvbW1vbiUyMFBvbGljeSUyMENBLG91PUZQS0ksbz1VLlMu
JTIwR292ZXJubWVudCxjPVVTP2NBQ2VydGlmaWNhdGU7YmluYXJ5LGNyb3NzQ2VydGlmaWNhdGVQ
YWlyO2JpbmFyeTA/BggrBgEFBQcwBYYzaHR0cDovL2h0dHAuZnBraS5nb3YvZmNwY2EvY2FDZXJ0
c0lzc3VlZEJ5ZmNwY2EucDdjMA0GCSqGSIb3DQEBBQUAA4IBAQAU0W5asBZqMhmSoIOB3y1XQc4K
usR/Mr9ZSzmH9UdbM05sq/2f5VMLQropx9kP5o15pvdVUYylb+lkCQXzgY04f9peZ+eBY5gpV1tv
1Vh6QwTo01RrgrnREuYvngg+AOchm2JBMclrQpbWQCr8feij/E2y8Q4zrYn/PkK5QQm6RT7yB3wb
qm1liTDkADSXKvpAqS6pbbEsXrDcf+pDwgPtCGqG7nuqO50nqzlq8S/BwaxX2mwMzR0T2Di+2cAd
ZCrwpewvbIGTZMntcodsQr8ieMzeqF64wLODUwbPwJG8x1Jq4pB1d3jqYW/NhGZnv416bBGIq6v5
Z0px8nReR3/2</X509Certificate></X509Data><X509Data><X509SubjectName>CN=Common Policy,OU=FBCA,O=U.S. Government,C=us</X509SubjectName><X509SKI>BBYEFC9Yl9ipBZilVh/72at17wI8NjTH</X509SKI><X509Certificate>MIIDoTCCAomgAwIBAgIQKTZHquOKrIZKI1byyrdhrzANBgkqhkiG9w0BAQUFADBOMQswCQYDVQQG
EwJ1czEYMBYGA1UEChMPVS5TLiBHb3Zlcm5tZW50MQ0wCwYDVQQLEwRGQkNBMRYwFAYDVQQDEw1D
b21tb24gUG9saWN5MB4XDTA3MTAxNTE1NTgwMFoXDTI3MTAxNTE2MDgwMFowTjELMAkGA1UEBhMC
dXMxGDAWBgNVBAoTD1UuUy4gR292ZXJubWVudDENMAsGA1UECxMERkJDQTEWMBQGA1UEAxMNQ29t
bW9uIFBvbGljeTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJeNvTMn5K1b+3i9L0dH
bsd46ZOcpN7JHP0vGzk4rEcXwH53KQA7Ax9oD81Npe53uCxiazH2+nIJfTApBnznfKM9hBiKHa4s
kqgf6F5PjY7rPxr4nApnnbBnTfAu0DDew5SwoM8uCjR/VAnTNr2kSVdSc+md/uRIeUYbW40y5KVI
ZPMiDZKdCBW/YDyD90ciJSKtKXG3d+8XyaK2lF7IMJCkFEhcVlcLQUwF1CpMP64Sm1kRdXAHImkt
LNMxzJJ+zM2kfpRHqpwJCPZLr1LoakCRxVW9QLHIbVeGlRfmH3O+Ry4+i0wXubklHKVSFzYIWcBC
vgortFZRPBtVyYyQd+sCAwEAAaN7MHkwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8w
HQYDVR0OBBYEFC9Yl9ipBZilVh/72at17wI8NjTHMBIGCSsGAQQBgjcVAQQFAgMBAAEwIwYJKwYB
BAGCNxUCBBYEFHa3YJbdFFYprHWF03BjwbxHhhyLMA0GCSqGSIb3DQEBBQUAA4IBAQBgrvNIFkBy
pgiIybxHLCRLXaCRc+1leJDwZ5B6pb8KrbYq+Zln34PFdx80CTj5fp5B4Ehg/uKqXYeI6oj9XEWy
yWrafaStsU+/HA2fHprA1RRzOCuKeEBuMPdi4c2Z/FFpZ2wR3bgQo2jeJqVW/TZsN5hs++58PGxr
cD/3SDcJjwtCga1GRrgLgwb0Gzigf0/NC++DiYeXHIowZ9z9VKEDfgHLhUyxCynDvux84T8PCVI8
L6eaSP436REGWOE2QYrEtr+O3c5Ks7wawM36GpnScZv6z7zyxFSjiDV2zBssRm8MtNHDYXaSdBHq
S4CNHIkRi+xb/xfJSPzn4AYR4oRe</X509Certificate></X509Data></KeyInfo><Object><SignatureProperties Id="sig-props-20121128145111697-77"><SignatureProperty Target="#dsig-20121128145111689-67"><dsig:signature-info xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dsig="http://scap.nist.gov/schema/xml-dsig/1.0"><dc:date>2012-11-28T14:51:11-0500</dc:date><dsig:nonce>7d3657b563e3bdcc</dsig:nonce></dsig:signature-info></SignatureProperty></SignatureProperties></Object><Object><Manifest Id="manifest-20121128145111688-5"><Reference URI="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-cpe-dictionary.xml"><Transforms><Transform Algorithm="http://www.w3.org/2006/12/xml-c14n11"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/><DigestValue>Il/6Kc21j+aWWsN63O88LlO6qMLRnngirL3cjac9zRY=</DigestValue></Reference><Reference URI="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-xccdf.xml"><Transforms><Transform Algorithm="http://www.w3.org/2006/12/xml-c14n11"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/><DigestValue>15PLyJER1OFjxtzYda7BRiA/v0Dc5G4OZEihGRcTJs4=</DigestValue></Reference><Reference URI="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-oval.xml"><Transforms><Transform Algorithm="http://www.w3.org/2006/12/xml-c14n11"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/><DigestValue>dYxOy/XiQg/csmy76/lr5haUsJtfVRJ27DBQUXksTi8=</DigestValue></Reference><Reference URI="#scap_gov.nist_comp_USGCB-Windows-XP-firewall-cpe-oval.xml"><Transforms><Transform Algorithm="http://www.w3.org/2006/12/xml-c14n11"/></Transforms><DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/><DigestValue>FkTyc4zH7s43NpZcti8Rzl20tnSALCu3Er4VhUNwYlk=</DigestValue></Reference></Manifest></Object></Signature></data-stream-collection>